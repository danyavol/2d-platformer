{"version":3,"sources":["webpack://platformer-2d/./lib/services/canvas.service.ts","webpack://platformer-2d/./lib/services/image.service.ts","webpack://platformer-2d/./lib/helpers/common-methods.ts","webpack://platformer-2d/./lib/objects/basic-object.ts","webpack://platformer-2d/./lib/objects/entity-object.ts","webpack://platformer-2d/./lib/objects/player/player.object.ts","webpack://platformer-2d/./lib/objects/wall/wall.object.ts","webpack://platformer-2d/./lib/services/grid.service.ts","webpack://platformer-2d/./lib/services/object.service.ts","webpack://platformer-2d/./lib/services/game-loop.service.ts","webpack://platformer-2d/./lib/services/config.service.ts","webpack://platformer-2d/./lib/index.ts","webpack://platformer-2d/webpack/bootstrap","webpack://platformer-2d/webpack/runtime/define property getters","webpack://platformer-2d/webpack/runtime/hasOwnProperty shorthand","webpack://platformer-2d/./sandbox/src/platformer-config.ts","webpack://platformer-2d/./sandbox/src/index.ts"],"names":["CanvasService","constructor","canvasElement","config","imageService","this","translation","h","v","backgroundImage","background","background1","element","canvas","Object","assign","ctx","getContext","map","width","height","breakpoints","camera","updateCameraTranslation","x","y","w","transX","transY","left","right","translate","top","bottom","clearCanvas","drawImage","img","coords","drawFlippedImage","scale","setTransform","drawFPS","fps","font","fillText","ImageService","static","grassMid","load","grassCenter","players","alien1","stand","alien1_stand","jump","alien1_jump","walk","alien1_walk1","alien1_walk2","alien2","alien2_stand","alien2_jump","alien2_walk1","alien2_walk2","filesCount","loadedFilesCount","isLoaded","Promise","res","finishLoading","file","Image","onload","fileLoaded","bind","src","abs","num","BasicObject","canvasService","relatedCells","isModelFlipped","reverseModel","size","drawObject","modelCoords","model","offset","image","DEFAULT_CONFIG","maxSpeed","sideAcceleration","gravity","maxFallSpeed","jumpPower","EntityObject","super","vx","vy","entityConfig","sideButtonPressed","jumpButtonPressed","inAir","textures","time","images","frequent","moveRight","slowDown","speedUp","moveLeft","updateState","_stop","_fall","setEntityConfig","stopFalling","startFalling","applyGravity","resetSideAcceleration","applyTextures","calculateTextureIndex","index","anim","frame","Math","floor","length","ySpeed","currSpeed","newSpeed","Player","hasCollision","pressedDirection","isLeftPressed","isRightPressed","isJumpPressed","name","initEventListeners","document","addEventListener","e","key","updateDirection","Wall","GridService","grid","resetGrid","getNeighbors","object","output","Set","forEach","o","add","Array","from","updateObjectPosition","removeObjectFromGrid","addObjectToGrid","i","obj","entries","index1","array","index2","splice","pop","getRelatedCells","push","topLeftCorner","getCellCoords","bottomRightCorner","getCellIndex","objCoords","cells","cellCoords","ObjectService","staticObjects","dynamicObjects","gridService","init","clearObjects","player","objects","type","renderObjects","renderDynamicObject","checkBounds","checkAllCollisions","round","objectsAround","hasOverlaps","checkCollision","o1","o2","o1_x1","o1_y1","o1_x2","o1_y2","o2_x1","o2_y1","o2_x2","o2_y2","horizontalOverlap","h1","h2","verticalOverlap","v1","v2","hOffset","vOffset","GameLoopService","objectService","isGamePaused","start","frameStart","performance","now","step","stop","frameEnd","setTimeout","ConfigService","applyDefaultConfig","parsedConfig","parseConfig","getParsedConfig","cellSize","horizontal","vertical","getParsedCameraConfig","getParsedObjectConfig","getPoint","a","b","split","parseInt","def","getDefaultConfig","Platformer2D","configService","gameLoopService","then","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","getElementById"],"mappings":"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","file":"sandbox/index.js","sourcesContent":["export default class CanvasService {\r\n    constructor(canvasElement, config, imageService) {\r\n        this.translation = {\r\n            h: 0,\r\n            v: 0\r\n        };\r\n        this.backgroundImage = imageService.background.background1;\r\n        this.element = canvasElement;\r\n        this.canvas = Object.assign(Object.assign({}, config.canvas), { ctx: canvasElement.getContext('2d') });\r\n        this.map = {\r\n            width: config.map.width,\r\n            height: config.map.height\r\n        };\r\n        this.element.width = this.canvas.width;\r\n        this.element.height = this.canvas.height;\r\n        this.breakpoints = config.camera;\r\n    }\r\n    updateCameraTranslation(x, y, w, h) {\r\n        // P.S. Don't try to understand this method :# This is hell\r\n        // Horizontal translation\r\n        let transX;\r\n        if (this.translation.h + this.breakpoints.left > x) {\r\n            transX = this.translation.h - (this.breakpoints.left + this.translation.h - x);\r\n        }\r\n        else if (this.translation.h + this.canvas.width - this.breakpoints.right < x + w) {\r\n            transX = this.translation.h + (x + w - (this.translation.h + this.canvas.width - this.breakpoints.right));\r\n        }\r\n        if (transX != null && transX != this.translation.h && transX >= 0 && transX <= this.map.width - this.canvas.width) {\r\n            this.canvas.ctx.translate(this.translation.h - transX, 0);\r\n            this.translation.h = transX;\r\n        }\r\n        if (transX != null && transX != this.translation.h) {\r\n            if (transX < 0) {\r\n                this.canvas.ctx.translate(0, this.translation.h);\r\n                this.translation.h = 0;\r\n            }\r\n            else if (transX > this.map.width - this.canvas.width) {\r\n                this.canvas.ctx.translate(0, this.canvas.width - this.map.width + this.translation.h);\r\n                this.translation.h = this.map.width - this.canvas.width;\r\n            }\r\n            else {\r\n                this.canvas.ctx.translate(0, this.translation.h - transX);\r\n                this.translation.h = transX;\r\n            }\r\n        }\r\n        // Vertical translation\r\n        let transY;\r\n        if (this.translation.v + this.breakpoints.top > y) {\r\n            transY = this.translation.v - (this.breakpoints.top + this.translation.v - y);\r\n        }\r\n        else if (this.translation.v + this.canvas.height - this.breakpoints.bottom < y + h) {\r\n            transY = this.translation.v + (y + h - (this.translation.v + this.canvas.height - this.breakpoints.bottom));\r\n        }\r\n        if (transY != null && transY != this.translation.v) {\r\n            if (transY < 0) {\r\n                this.canvas.ctx.translate(0, this.translation.v);\r\n                this.translation.v = 0;\r\n            }\r\n            else if (transY > this.map.height - this.canvas.height) {\r\n                this.canvas.ctx.translate(0, this.canvas.height - this.map.height + this.translation.v);\r\n                this.translation.v = this.map.height - this.canvas.height;\r\n            }\r\n            else {\r\n                this.canvas.ctx.translate(0, this.translation.v - transY);\r\n                this.translation.v = transY;\r\n            }\r\n        }\r\n    }\r\n    clearCanvas() {\r\n        this.canvas.ctx.drawImage(this.backgroundImage, 0 + this.translation.h, 0 + this.translation.v, this.canvas.width, this.canvas.height);\r\n    }\r\n    drawImage(img, coords) {\r\n        this.canvas.ctx.drawImage(img, ...coords);\r\n    }\r\n    drawFlippedImage(img, coords) {\r\n        this.canvas.ctx.translate(coords[0] + coords[2], coords[1]);\r\n        this.canvas.ctx.scale(-1, 1);\r\n        this.canvas.ctx.drawImage(img, 0, 0, coords[2], coords[3]);\r\n        this.canvas.ctx.setTransform(1, 0, 0, 1, -this.translation.h, -this.translation.v);\r\n    }\r\n    drawFPS(fps) {\r\n        this.canvas.ctx.font = '14px sans-serif';\r\n        this.canvas.ctx.fillText('FPS: ' + fps, 0 + this.translation.h, 14 + this.translation.v);\r\n    }\r\n}\r\n","// 1) Import image\r\nimport grassMid from '../assets/grass/grassMid.svg';\r\nimport grassCenter from '../assets/grass/grassCenter.svg';\r\nimport alien1_stand from '../assets/player/alien1/alien1_stand.svg';\r\nimport alien1_jump from '../assets/player/alien1/alien1_jump.svg';\r\nimport alien1_walk1 from '../assets/player/alien1/alien1_walk1.svg';\r\nimport alien1_walk2 from '../assets/player/alien1/alien1_walk2.svg';\r\nimport alien2_stand from '../assets/player/alien2/alien2_stand.svg';\r\nimport alien2_jump from '../assets/player/alien2/alien2_jump.svg';\r\nimport alien2_walk1 from '../assets/player/alien2/alien2_walk1.svg';\r\nimport alien2_walk2 from '../assets/player/alien2/alien2_walk2.svg';\r\nimport background1 from '../assets/backgrounds/background1.svg';\r\nexport class ImageService {\r\n    constructor() {\r\n        // 3) Load image to files object\r\n        this.static = {\r\n            grassMid: this.load(grassMid),\r\n            grassCenter: this.load(grassCenter)\r\n        };\r\n        this.players = {\r\n            alien1: {\r\n                stand: this.load(alien1_stand),\r\n                jump: this.load(alien1_jump),\r\n                walk: [\r\n                    this.load(alien1_walk1),\r\n                    this.load(alien1_walk2)\r\n                ]\r\n            },\r\n            alien2: {\r\n                stand: this.load(alien2_stand),\r\n                jump: this.load(alien2_jump),\r\n                walk: [\r\n                    this.load(alien2_walk1),\r\n                    this.load(alien2_walk2)\r\n                ]\r\n            }\r\n        };\r\n        this.background = {\r\n            background1: this.load(background1)\r\n        };\r\n        this.filesCount = 0;\r\n        this.loadedFilesCount = 0;\r\n        this.isLoaded = new Promise(res => this.finishLoading = res);\r\n    }\r\n    load(file) {\r\n        ++this.filesCount;\r\n        const img = new Image();\r\n        img.onload = this.fileLoaded.bind(this);\r\n        img.src = file;\r\n        return img;\r\n    }\r\n    fileLoaded() {\r\n        if (++this.loadedFilesCount >= this.filesCount)\r\n            this.finishLoading();\r\n    }\r\n}\r\n","export function swapArrayElements(array, index1, index2) {\r\n    array[index2] = array.splice(index1, 1, array[index2])[0];\r\n}\r\nexport function abs(num) {\r\n    if (num < 0)\r\n        return -num;\r\n    return num;\r\n}\r\n","export class BasicObject {\r\n    constructor(config, canvasService) {\r\n        this.canvasService = canvasService;\r\n        this.relatedCells = [];\r\n        this.isModelFlipped = false;\r\n        this.reverseModel = false;\r\n        this.coords = config.coords;\r\n        this.size = config.size;\r\n    }\r\n    drawObject() {\r\n        const modelCoords = [\r\n            this.coords[0] + this.model.offset[0],\r\n            this.coords[1] + this.model.offset[1],\r\n            ...this.model.size\r\n        ];\r\n        if ((!this.isModelFlipped && !this.reverseModel) || (this.isModelFlipped && this.reverseModel))\r\n            this.canvasService.drawImage(this.model.image, modelCoords);\r\n        else\r\n            this.canvasService.drawFlippedImage(this.model.image, modelCoords);\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { BasicObject } from \"./basic-object\";\r\nconst DEFAULT_CONFIG = {\r\n    maxSpeed: 100,\r\n    sideAcceleration: 0.2,\r\n    gravity: 2000,\r\n    maxFallSpeed: 800,\r\n    jumpPower: 800\r\n};\r\nexport class EntityObject extends BasicObject {\r\n    constructor(config, canvasService) {\r\n        super(config, canvasService);\r\n        this.vx = 0; // X-axis speed (in pixels per second)\r\n        this.vy = 0; // Y-axis speed (in pixels per second)\r\n        this.entityConfig = DEFAULT_CONFIG;\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n        this.inAir = false;\r\n        this.textures = {\r\n            time: 0,\r\n            stand: { image: null },\r\n            walk: { images: null, frequent: null },\r\n            jump: { image: null }\r\n        };\r\n    }\r\n    moveRight() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = false;\r\n        if (this.vx < 0)\r\n            this.vx = -this.slowDown(this.vx);\r\n        else\r\n            this.vx = this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    moveLeft() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = true;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    jump() {\r\n        if (!this.inAir) {\r\n            this.jumpButtonPressed = true;\r\n            this.inAir = true;\r\n            this.vy = this.entityConfig.jumpPower;\r\n            this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n        }\r\n    }\r\n    updateState(fps) {\r\n        this.fps = fps;\r\n        if (!this.sideButtonPressed)\r\n            this._stop();\r\n        if (!this.jumpButtonPressed)\r\n            this._fall();\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n    }\r\n    ;\r\n    setEntityConfig(entityConfig) {\r\n        this.entityConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), entityConfig);\r\n    }\r\n    stopFalling() {\r\n        this.inAir = false;\r\n        this.vy = 0;\r\n    }\r\n    startFalling() {\r\n        this.vy = this.applyGravity(0);\r\n    }\r\n    resetSideAcceleration() {\r\n        this.vx = 0;\r\n    }\r\n    /****************** Execute this if no buttons pressed *********************/\r\n    _stop() {\r\n        if (this.vx === 0)\r\n            return;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.slowDown(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    _fall() {\r\n        this.inAir = true;\r\n        this.vy = this.applyGravity(this.vy);\r\n        this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n    }\r\n    /****************** Helpers *********************/\r\n    applyTextures() {\r\n        let img;\r\n        this.textures.time += 1000 / this.fps;\r\n        if (this.textures.time >= 1000)\r\n            this.textures.time = 0;\r\n        if (this.inAir) {\r\n            img = this.textures.jump.image;\r\n        }\r\n        else if (this.vx != 0) {\r\n            this.calculateTextureIndex(this.textures.walk);\r\n            img = this.textures.walk.images[this.textures.walk.index];\r\n        }\r\n        else {\r\n            img = this.textures.stand.image;\r\n        }\r\n        img ? this.model.image = img : null;\r\n    }\r\n    calculateTextureIndex(anim) {\r\n        const frame = Math.floor(this.textures.time / (1000 / anim.frequent));\r\n        anim.index = frame - Math.floor(frame / anim.images.length) * anim.images.length;\r\n    }\r\n    applyGravity(vy) {\r\n        const ySpeed = vy - this.entityConfig.gravity / this.fps;\r\n        if (-ySpeed > this.entityConfig.maxFallSpeed)\r\n            return -this.entityConfig.maxFallSpeed;\r\n        else\r\n            return ySpeed;\r\n    }\r\n    speedUp(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed + this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed > this.entityConfig.maxSpeed)\r\n            return this.entityConfig.maxSpeed;\r\n        else\r\n            return newSpeed;\r\n    }\r\n    slowDown(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed - this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed < 0)\r\n            return 0;\r\n        else\r\n            return newSpeed;\r\n    }\r\n}\r\n","import { EntityObject } from \"../entity-object\";\r\nexport class Player extends EntityObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = true;\r\n        this.pressedDirection = null;\r\n        this.isLeftPressed = false;\r\n        this.isRightPressed = false;\r\n        this.isJumpPressed = false;\r\n        this.setEntityConfig({\r\n            maxSpeed: 350\r\n        });\r\n        const textures = imageService.players[config.model.name];\r\n        this.textures = {\r\n            time: 0,\r\n            stand: { image: textures.stand },\r\n            walk: { images: textures.walk, frequent: 6 },\r\n            jump: { image: textures.jump }\r\n        };\r\n        config.coords[1] = config.coords[1] - config.size[1] * 0.4;\r\n        config.size[1] = config.size[1] * 1.4;\r\n        this.model = {\r\n            image: textures.stand,\r\n            offset: config.model.offset,\r\n            size: [config.model.size[0], config.model.size[1] * 1.4]\r\n        };\r\n        this.initEventListeners();\r\n    }\r\n    updateState(fps) {\r\n        switch (this.pressedDirection) {\r\n            case 'left':\r\n                super.moveLeft();\r\n                break;\r\n            case 'right':\r\n                super.moveRight();\r\n                break;\r\n        }\r\n        if (this.isJumpPressed)\r\n            super.jump();\r\n        super.updateState(fps);\r\n    }\r\n    initEventListeners() {\r\n        document.addEventListener('keydown', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = true;\r\n                    break;\r\n            }\r\n        });\r\n        document.addEventListener('keyup', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = false;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    updateDirection() {\r\n        if (this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = 'left';\r\n        }\r\n        else if (!this.isLeftPressed && this.isRightPressed) {\r\n            this.pressedDirection = 'right';\r\n        }\r\n        else if (!this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = null;\r\n        }\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Wall extends BasicObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = true;\r\n        this.model = {\r\n            image: imageService.static[config.model.name],\r\n            offset: config.model.offset,\r\n            size: config.model.size\r\n        };\r\n    }\r\n}\r\n","import { swapArrayElements } from \"../helpers/common-methods\";\r\nexport class GridService {\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.grid = {};\r\n        this.resetGrid();\r\n    }\r\n    getNeighbors(object) {\r\n        const output = new Set();\r\n        object.relatedCells.forEach(index => {\r\n            this.grid[index].forEach(o => {\r\n                if (o !== object)\r\n                    output.add(o);\r\n            });\r\n        });\r\n        return Array.from(output);\r\n    }\r\n    updateObjectPosition(o) {\r\n        this.removeObjectFromGrid(o);\r\n        this.addObjectToGrid(o);\r\n    }\r\n    // TODO: Check if it faster not remove/add all items, but update only changed items\r\n    removeObjectFromGrid(object) {\r\n        object.relatedCells.forEach(index => {\r\n            for (let [i, obj] of this.grid[index].entries()) {\r\n                if (obj === object) {\r\n                    // Swap our object with the last item in array and then remove last item (performance hack)\r\n                    swapArrayElements(this.grid[index], i, this.grid[index].length - 1);\r\n                    this.grid[index].pop();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        object.relatedCells = [];\r\n    }\r\n    addObjectToGrid(object) {\r\n        const relatedCells = this.getRelatedCells(object.coords, object.size);\r\n        relatedCells.forEach(index => this.grid[index].push(object));\r\n        object.relatedCells = relatedCells;\r\n    }\r\n    resetGrid() {\r\n        const cells = this.getRelatedCells([0, 0], [this.map.width, this.map.height]);\r\n        cells.forEach(index => this.grid[index] = []);\r\n    }\r\n    getRelatedCells(coords, size) {\r\n        const topLeftCorner = this.getCellCoords(coords);\r\n        const bottomRightCorner = this.getCellCoords([coords[0] + size[0], coords[1] + size[1]]);\r\n        const output = [];\r\n        for (let x = topLeftCorner[0]; x <= bottomRightCorner[0]; x++) {\r\n            for (let y = topLeftCorner[1]; y <= bottomRightCorner[1]; y++) {\r\n                output.push(this.getCellIndex([x, y]));\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    getCellCoords(objCoords) {\r\n        const x = Math.floor(objCoords[0] / this.map.cells.size);\r\n        const y = Math.floor(objCoords[1] / this.map.cells.size);\r\n        return [x, y];\r\n    }\r\n    getCellIndex(cellCoords) {\r\n        return cellCoords[0] + 'x' + cellCoords[1];\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { Player } from \"../objects/player/player.object\";\r\nimport { Wall } from \"../objects/wall/wall.object\";\r\nimport { GridService } from \"./grid.service\";\r\nexport class ObjectService {\r\n    constructor(imageService, canvasService, config) {\r\n        this.imageService = imageService;\r\n        this.canvasService = canvasService;\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n        this.map = {\r\n            width: config.map.width,\r\n            height: config.map.height,\r\n        };\r\n        this.gridService = new GridService(config.map);\r\n        this.init(config);\r\n    }\r\n    init(config) {\r\n        this.clearObjects();\r\n        this.player = new Player(config.player, this.canvasService, this.imageService);\r\n        for (let obj of config.objects) {\r\n            switch (obj.type) {\r\n                case 'wall':\r\n                    this.staticObjects.push(new Wall(obj, this.canvasService, this.imageService));\r\n                    break;\r\n            }\r\n        }\r\n        this.staticObjects.forEach(o => this.gridService.addObjectToGrid(o));\r\n    }\r\n    renderObjects(fps) {\r\n        /* Static objects render */\r\n        this.staticObjects.forEach(o => o.drawObject());\r\n        /* Player render */\r\n        this.renderDynamicObject(this.player, fps);\r\n        this.canvasService.updateCameraTranslation(...this.player.coords, ...this.player.size);\r\n        /* Dynamic objects render */\r\n        this.dynamicObjects.forEach(o => {\r\n            this.renderDynamicObject(o, fps);\r\n        });\r\n    }\r\n    renderDynamicObject(object, fps) {\r\n        object.updateState(fps);\r\n        this.checkBounds(object);\r\n        this.gridService.updateObjectPosition(object);\r\n        this.checkAllCollisions(object, this.gridService.getNeighbors(object));\r\n        object.applyTextures();\r\n        // Round coords after all calculations to prevent visual collision\r\n        object.coords[0] = Math.round(object.coords[0]);\r\n        object.coords[1] = Math.round(object.coords[1]);\r\n        object.drawObject();\r\n    }\r\n    clearObjects() {\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n    }\r\n    get allObjects() {\r\n        return [...this.staticObjects, ...this.dynamicObjects];\r\n    }\r\n    checkBounds(obj) {\r\n        let [x, y] = obj.coords;\r\n        if (x < 0) {\r\n            x = 0;\r\n            obj.resetSideAcceleration();\r\n        }\r\n        else if (x + obj.size[0] > this.map.width) {\r\n            x = this.map.width - obj.size[0];\r\n            obj.resetSideAcceleration();\r\n        }\r\n        if (y < 0) {\r\n            y = 0;\r\n            obj.startFalling();\r\n        }\r\n        else if (y + obj.size[1] > this.map.height) {\r\n            y = this.map.height - obj.size[1];\r\n            obj.stopFalling();\r\n        }\r\n        obj.coords = [x, y];\r\n    }\r\n    checkAllCollisions(obj, objectsAround) {\r\n        let hasOverlaps = false;\r\n        objectsAround.forEach(o => this.checkCollision(obj, o) ? hasOverlaps = true : null);\r\n        if (hasOverlaps)\r\n            this.gridService.updateObjectPosition(obj);\r\n    }\r\n    checkCollision(o1, o2) {\r\n        // if o1 overlaps with o2, then o1 will be moved out from o2\r\n        // P.S. This function is hell for debugging :)\r\n        let [o1_x1, o1_y1] = o1.coords;\r\n        const [o1_x2, o1_y2] = [o1.coords[0] + o1.size[0], o1.coords[1] + o1.size[1]];\r\n        const [o2_x1, o2_y1] = o2.coords;\r\n        const [o2_x2, o2_y2] = [o2.coords[0] + o2.size[0], o2.coords[1] + o2.size[1]];\r\n        // Check horizontal overlaps\r\n        let horizontalOverlap = false;\r\n        const h1 = o1_x2 - o2_x1;\r\n        const h2 = o1_x1 - o2_x2;\r\n        if ((h1 < 0 && h2 > 0) || (h1 > 0 && h2 < 0))\r\n            horizontalOverlap = true;\r\n        // Check vertical overlaps\r\n        let verticalOverlap = false;\r\n        const v1 = o1_y2 - o2_y1;\r\n        const v2 = o1_y1 - o2_y2;\r\n        if ((v1 < 0 && v2 > 0) || (v1 > 0 && v2 < 0))\r\n            verticalOverlap = true;\r\n        // If overlaps in all axes\r\n        if (verticalOverlap && horizontalOverlap) {\r\n            const hOffset = abs(h1) < abs(h2) ? h1 : h2;\r\n            const vOffset = abs(v1) < abs(v2) ? v1 : v2;\r\n            if (abs(hOffset) < abs(vOffset)) {\r\n                o1_x1 -= hOffset;\r\n                o1.resetSideAcceleration();\r\n            }\r\n            else {\r\n                o1_y1 -= vOffset;\r\n                if (vOffset > 0) {\r\n                    o1.stopFalling();\r\n                }\r\n                else {\r\n                    o1.startFalling();\r\n                }\r\n            }\r\n            o1.coords = [o1_x1, o1_y1];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class GameLoopService {\r\n    constructor(canvasService, objectService) {\r\n        this.canvasService = canvasService;\r\n        this.objectService = objectService;\r\n        this.isGamePaused = false;\r\n    }\r\n    start() {\r\n        this.isGamePaused = false;\r\n        this.frameStart = performance.now();\r\n        this.step();\r\n    }\r\n    stop() {\r\n        this.isGamePaused = true;\r\n    }\r\n    // Methods that should be executed during single game frame\r\n    frame() {\r\n        this.canvasService.clearCanvas();\r\n        this.objectService.renderObjects(this.fps);\r\n        this.canvasService.drawFPS(this.fps);\r\n    }\r\n    step() {\r\n        const frameEnd = performance.now();\r\n        this.fps = Math.floor(1000 / (frameEnd - this.frameStart));\r\n        this.frameStart = performance.now();\r\n        if (this.fps < 25)\r\n            this.fps = 25;\r\n        if (this.fps > 1000)\r\n            this.fps = 1000;\r\n        this.frame();\r\n        if (!this.isGamePaused)\r\n            setTimeout(() => this.step(), 0);\r\n    }\r\n}\r\n","export class ConfigService {\r\n    constructor(config) {\r\n        this.config = this.applyDefaultConfig(config);\r\n        this.parsedConfig = this.parseConfig(this.config);\r\n    }\r\n    getParsedConfig() {\r\n        return this.parsedConfig;\r\n    }\r\n    parseConfig(config) {\r\n        const parsedConfig = {\r\n            canvas: Object.assign({}, config.canvas),\r\n            map: {\r\n                width: config.map.width * config.map.cellSize,\r\n                height: config.map.height * config.map.cellSize,\r\n                cells: {\r\n                    size: config.map.cellSize,\r\n                    horizontal: config.map.width,\r\n                    vertical: config.map.height\r\n                }\r\n            },\r\n            camera: this.getParsedCameraConfig(config),\r\n            player: this.getParsedObjectConfig(config.player, config),\r\n            objects: config.objects.map(obj => this.getParsedObjectConfig(obj, config))\r\n        };\r\n        return parsedConfig;\r\n    }\r\n    getParsedObjectConfig(obj, config) {\r\n        const parsedConfig = {\r\n            type: obj.type,\r\n            coords: [obj.coords[0] * config.map.cellSize, obj.coords[1] * config.map.cellSize],\r\n            size: [config.map.cellSize, config.map.cellSize],\r\n            model: {\r\n                name: obj.model,\r\n                offset: [0, 0],\r\n                size: [config.map.cellSize, config.map.cellSize]\r\n            }\r\n        };\r\n        return parsedConfig;\r\n    }\r\n    getParsedCameraConfig(config) {\r\n        const breakpoints = {\r\n            top: getPoint(config.canvas.height, config.camera.top),\r\n            right: getPoint(config.canvas.width, config.camera.right),\r\n            bottom: getPoint(config.canvas.height, config.camera.bottom),\r\n            left: getPoint(config.canvas.width, config.camera.left)\r\n        };\r\n        return breakpoints;\r\n        function getPoint(x, y) {\r\n            const [a, b] = y.split(':');\r\n            return x / parseInt(b) * parseInt(a);\r\n        }\r\n    }\r\n    /************** DEFAULT CONFIG **************/\r\n    applyDefaultConfig(config) {\r\n        const def = this.getDefaultConfig();\r\n        return {\r\n            canvas: Object.assign(Object.assign({}, def.canvas), config.canvas),\r\n            map: Object.assign(Object.assign({}, def.map), config.map),\r\n            camera: Object.assign(Object.assign({}, def.camera), config.camera),\r\n            player: Object.assign({}, config.player),\r\n            objects: [...def.objects, ...config.objects]\r\n        };\r\n    }\r\n    getDefaultConfig() {\r\n        return {\r\n            canvas: {\r\n                width: 900,\r\n                height: 600\r\n            },\r\n            map: {\r\n                width: 20,\r\n                height: 10,\r\n                cellSize: 70,\r\n            },\r\n            camera: {\r\n                top: '1:4',\r\n                right: '1:2',\r\n                bottom: '1:4',\r\n                left: '1:4',\r\n            },\r\n            player: null,\r\n            objects: []\r\n        };\r\n    }\r\n}\r\n","import CanvasService from \"./services/canvas.service\";\r\nimport { ImageService } from \"./services/image.service\";\r\nimport { ObjectService } from \"./services/object.service\";\r\nimport { GameLoopService } from \"./services/game-loop.service\";\r\nimport { ConfigService } from \"./services/config.service\";\r\nexport default class Platformer2D {\r\n    constructor(canvas, config) {\r\n        this.imageService = new ImageService();\r\n        this.configService = new ConfigService(config);\r\n        this.config = this.configService.getParsedConfig();\r\n        this.canvasService = new CanvasService(canvas, this.config, this.imageService);\r\n        this.objectService = new ObjectService(this.imageService, this.canvasService, this.config);\r\n        this.gameLoopService = new GameLoopService(this.canvasService, this.objectService);\r\n        this.imageService.isLoaded.then(() => this.init());\r\n    }\r\n    init() {\r\n        this.gameLoopService.start();\r\n    }\r\n}\r\n;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const GAME_CONFIG = {\r\n    canvas: {\r\n        width: 900,\r\n        height: 600\r\n    },\r\n    map: {\r\n        width: 20,\r\n        height: 10,\r\n        cellSize: 70,\r\n    },\r\n    camera: {\r\n        top: '1:4',\r\n        right: '1:2',\r\n        bottom: '1:4',\r\n        left: '1:4',\r\n    },\r\n    player: { coords: [1, 7], type: 'player', model: 'alien2', },\r\n    objects: [\r\n        { coords: [0, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [1, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [2, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [3, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [4, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [5, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [6, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [7, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [0, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [1, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [2, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [3, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [4, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [5, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [6, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [7, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [8, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [8, 8], type: 'wall', model: 'grassCenter' },\r\n        { coords: [8, 7], type: 'wall', model: 'grassCenter' },\r\n        { coords: [8, 6], type: 'wall', model: 'grassMid' },\r\n        { coords: [9, 7], type: 'wall', model: 'grassMid' },\r\n        { coords: [10, 7], type: 'wall', model: 'grassMid' },\r\n        { coords: [12, 9], type: 'wall', model: 'grassMid' },\r\n    ]\r\n};\r\nexport default GAME_CONFIG;\r\n","import Platformer2D from \"../../lib/index\";\r\nimport GAME_CONFIG from \"./platformer-config\";\r\nconst canvas = document.getElementById('game-canvas');\r\nnew Platformer2D(canvas, GAME_CONFIG);\r\n"],"sourceRoot":""}