{"version":3,"sources":["webpack://platformer-2d/./lib/services/canvas.service.ts","webpack://platformer-2d/./lib/services/image.service.ts","webpack://platformer-2d/./lib/helpers/common-methods.ts","webpack://platformer-2d/./lib/objects/basic-object.ts","webpack://platformer-2d/./lib/objects/types/decoration.object.ts","webpack://platformer-2d/./lib/objects/entity-object.ts","webpack://platformer-2d/./lib/objects/types/player.object.ts","webpack://platformer-2d/./lib/objects/types/wall.object.ts","webpack://platformer-2d/./lib/services/grid.service.ts","webpack://platformer-2d/./lib/services/object.service.ts","webpack://platformer-2d/./lib/services/game-loop.service.ts","webpack://platformer-2d/./lib/services/config.service.ts","webpack://platformer-2d/./lib/index.ts","webpack://platformer-2d/webpack/bootstrap","webpack://platformer-2d/webpack/runtime/define property getters","webpack://platformer-2d/webpack/runtime/hasOwnProperty shorthand","webpack://platformer-2d/./sandbox/src/platformer-config.ts","webpack://platformer-2d/./sandbox/src/index.ts"],"names":["CanvasService","constructor","canvasElement","config","imageService","this","translation","h","v","backgroundImage","background","background1","element","canvas","Object","assign","ctx","getContext","map","width","height","breakpoints","camera","updateCameraTranslation","x","y","w","transX","transY","left","right","translate","top","bottom","clearCanvas","drawImage","img","coords","drawFlippedImage","scale","setTransform","drawFPS","fps","font","fillText","ImageService","static","grassMid","load","grassCenter","bush","fence","fence_broken","herb","rock","mushroomRed","mushroomBrown","players","alien1","stand","alien1_stand","jump","alien1_jump","walk","alien1_walk1","alien1_walk2","alien2","alien2_stand","alien2_jump","alien2_walk1","alien2_walk2","filesCount","loadedFilesCount","isLoaded","Promise","res","finishLoading","file","Image","onload","fileLoaded","bind","src","abs","num","BasicObject","canvasService","relatedCells","isModelFlipped","reverseModel","size","drawObject","modelCoords","model","offset","image","Decoration","super","hasCollision","setModelParams","name","updateObjectSize","widthRate","heightRate","randomX","xRandom","Math","random","DEFAULT_CONFIG","maxSpeed","sideAcceleration","gravity","maxFallSpeed","jumpPower","EntityObject","vx","vy","entityConfig","sideButtonPressed","jumpButtonPressed","inAir","textures","time","images","frequent","moveRight","slowDown","speedUp","moveLeft","updateState","_stop","_fall","setEntityConfig","stopFalling","startFalling","applyGravity","resetSideAcceleration","applyTextures","calculateTextureIndex","index","anim","frame","floor","length","ySpeed","currSpeed","newSpeed","Player","pressedDirection","isLeftPressed","isRightPressed","isJumpPressed","initEventListeners","document","addEventListener","e","key","updateDirection","Wall","GridService","grid","resetGrid","getNeighbors","object","output","Set","forEach","o","add","Array","from","updateObjectPosition","removeObjectFromGrid","addObjectToGrid","i","obj","entries","index1","array","index2","splice","pop","getRelatedCells","push","topLeftCorner","getCellCoords","bottomRightCorner","getCellIndex","objCoords","cells","cellCoords","ObjectService","background_objects","static_objects","gridService","init","clearObjects","player","objects","type","renderObjects","renderDynamicObject","checkBounds","checkAllCollisions","round","objectsAround","hasOverlaps","checkCollision","o1","o2","o1_x1","o1_y1","o1_x2","o1_y2","o2_x1","o2_y1","o2_x2","o2_y2","horizontalOverlap","h1","h2","verticalOverlap","v1","v2","hOffset","vOffset","GameLoopService","objectService","isGamePaused","start","frameStart","performance","now","step","stop","frameEnd","setTimeout","ConfigService","applyDefaultConfig","parsedConfig","parseConfig","getParsedConfig","cellSize","horizontal","vertical","getParsedCameraConfig","getParsedObjectConfig","getPoint","a","b","split","parseInt","def","getDefaultConfig","Platformer2D","configService","gameLoopService","then","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","getElementById"],"mappings":"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","file":"sandbox/index.js","sourcesContent":["export default class CanvasService {\r\n    constructor(canvasElement, config, imageService) {\r\n        this.translation = {\r\n            h: 0,\r\n            v: 0\r\n        };\r\n        this.backgroundImage = imageService.background.background1;\r\n        this.element = canvasElement;\r\n        this.canvas = Object.assign(Object.assign({}, config.canvas), { ctx: canvasElement.getContext('2d') });\r\n        this.map = {\r\n            width: config.map.width,\r\n            height: config.map.height\r\n        };\r\n        this.element.width = this.canvas.width;\r\n        this.element.height = this.canvas.height;\r\n        this.breakpoints = config.camera;\r\n    }\r\n    updateCameraTranslation(x, y, w, h) {\r\n        // P.S. Don't try to understand this method :# This is hell\r\n        // Horizontal translation\r\n        let transX;\r\n        if (this.translation.h + this.breakpoints.left > x) {\r\n            transX = this.translation.h - (this.breakpoints.left + this.translation.h - x);\r\n        }\r\n        else if (this.translation.h + this.canvas.width - this.breakpoints.right < x + w) {\r\n            transX = this.translation.h + (x + w - (this.translation.h + this.canvas.width - this.breakpoints.right));\r\n        }\r\n        if (transX != null && transX != this.translation.h && transX >= 0 && transX <= this.map.width - this.canvas.width) {\r\n            this.canvas.ctx.translate(this.translation.h - transX, 0);\r\n            this.translation.h = transX;\r\n        }\r\n        if (transX != null && transX != this.translation.h) {\r\n            if (transX < 0) {\r\n                this.canvas.ctx.translate(0, this.translation.h);\r\n                this.translation.h = 0;\r\n            }\r\n            else if (transX > this.map.width - this.canvas.width) {\r\n                this.canvas.ctx.translate(0, this.canvas.width - this.map.width + this.translation.h);\r\n                this.translation.h = this.map.width - this.canvas.width;\r\n            }\r\n            else {\r\n                this.canvas.ctx.translate(0, this.translation.h - transX);\r\n                this.translation.h = transX;\r\n            }\r\n        }\r\n        // Vertical translation\r\n        let transY;\r\n        if (this.translation.v + this.breakpoints.top > y) {\r\n            transY = this.translation.v - (this.breakpoints.top + this.translation.v - y);\r\n        }\r\n        else if (this.translation.v + this.canvas.height - this.breakpoints.bottom < y + h) {\r\n            transY = this.translation.v + (y + h - (this.translation.v + this.canvas.height - this.breakpoints.bottom));\r\n        }\r\n        if (transY != null && transY != this.translation.v) {\r\n            if (transY < 0) {\r\n                this.canvas.ctx.translate(0, this.translation.v);\r\n                this.translation.v = 0;\r\n            }\r\n            else if (transY > this.map.height - this.canvas.height) {\r\n                this.canvas.ctx.translate(0, this.canvas.height - this.map.height + this.translation.v);\r\n                this.translation.v = this.map.height - this.canvas.height;\r\n            }\r\n            else {\r\n                this.canvas.ctx.translate(0, this.translation.v - transY);\r\n                this.translation.v = transY;\r\n            }\r\n        }\r\n    }\r\n    clearCanvas() {\r\n        this.canvas.ctx.drawImage(this.backgroundImage, 0 + this.translation.h, 0 + this.translation.v, this.canvas.width, this.canvas.height);\r\n    }\r\n    drawImage(img, coords) {\r\n        this.canvas.ctx.drawImage(img, ...coords);\r\n    }\r\n    drawFlippedImage(img, coords) {\r\n        this.canvas.ctx.translate(coords[0] + coords[2], coords[1]);\r\n        this.canvas.ctx.scale(-1, 1);\r\n        this.canvas.ctx.drawImage(img, 0, 0, coords[2], coords[3]);\r\n        this.canvas.ctx.setTransform(1, 0, 0, 1, -this.translation.h, -this.translation.v);\r\n    }\r\n    drawFPS(fps) {\r\n        this.canvas.ctx.font = '14px sans-serif';\r\n        this.canvas.ctx.fillText('FPS: ' + fps, 0 + this.translation.h, 14 + this.translation.v);\r\n    }\r\n}\r\n","// 1) Import image\r\n/** Static objects */\r\nimport grassMid from '../assets/grass/grassMid.svg';\r\nimport grassCenter from '../assets/grass/grassCenter.svg';\r\nimport bush from '../assets/decorations/bush.svg';\r\nimport fence from '../assets/decorations/fence.svg';\r\nimport fence_broken from '../assets/decorations/fence_broken.svg';\r\nimport herb from '../assets/decorations/herb.svg';\r\nimport rock from '../assets/decorations/rock.svg';\r\nimport mushroomRed from '../assets/decorations/mushroomRed.svg';\r\nimport mushroomBrown from '../assets/decorations/mushroomBrown.svg';\r\n/** Players */\r\nimport alien1_stand from '../assets/player/alien1/alien1_stand.svg';\r\nimport alien1_jump from '../assets/player/alien1/alien1_jump.svg';\r\nimport alien1_walk1 from '../assets/player/alien1/alien1_walk1.svg';\r\nimport alien1_walk2 from '../assets/player/alien1/alien1_walk2.svg';\r\nimport alien2_stand from '../assets/player/alien2/alien2_stand.svg';\r\nimport alien2_jump from '../assets/player/alien2/alien2_jump.svg';\r\nimport alien2_walk1 from '../assets/player/alien2/alien2_walk1.svg';\r\nimport alien2_walk2 from '../assets/player/alien2/alien2_walk2.svg';\r\n/** Backgrounds */\r\nimport background1 from '../assets/backgrounds/background1.svg';\r\nexport class ImageService {\r\n    constructor() {\r\n        // 3) Load image to files object\r\n        this.static = {\r\n            grassMid: this.load(grassMid),\r\n            grassCenter: this.load(grassCenter),\r\n            bush: this.load(bush),\r\n            fence: this.load(fence),\r\n            fence_broken: this.load(fence_broken),\r\n            herb: this.load(herb),\r\n            rock: this.load(rock),\r\n            mushroomRed: this.load(mushroomRed),\r\n            mushroomBrown: this.load(mushroomBrown),\r\n        };\r\n        this.players = {\r\n            alien1: {\r\n                stand: this.load(alien1_stand),\r\n                jump: this.load(alien1_jump),\r\n                walk: [\r\n                    this.load(alien1_walk1),\r\n                    this.load(alien1_walk2)\r\n                ]\r\n            },\r\n            alien2: {\r\n                stand: this.load(alien2_stand),\r\n                jump: this.load(alien2_jump),\r\n                walk: [\r\n                    this.load(alien2_walk1),\r\n                    this.load(alien2_walk2)\r\n                ]\r\n            }\r\n        };\r\n        this.background = {\r\n            background1: this.load(background1)\r\n        };\r\n        this.filesCount = 0;\r\n        this.loadedFilesCount = 0;\r\n        this.isLoaded = new Promise(res => this.finishLoading = res);\r\n    }\r\n    load(file) {\r\n        ++this.filesCount;\r\n        const img = new Image();\r\n        img.onload = this.fileLoaded.bind(this);\r\n        img.src = file;\r\n        return img;\r\n    }\r\n    fileLoaded() {\r\n        if (++this.loadedFilesCount >= this.filesCount)\r\n            this.finishLoading();\r\n    }\r\n}\r\n","export function swapArrayElements(array, index1, index2) {\r\n    array[index2] = array.splice(index1, 1, array[index2])[0];\r\n}\r\nexport function abs(num) {\r\n    if (num < 0)\r\n        return -num;\r\n    return num;\r\n}\r\n","export class BasicObject {\r\n    constructor(config, canvasService) {\r\n        this.canvasService = canvasService;\r\n        this.relatedCells = [];\r\n        this.isModelFlipped = false;\r\n        this.reverseModel = false;\r\n        this.coords = config.coords;\r\n        this.size = config.size;\r\n    }\r\n    drawObject() {\r\n        const modelCoords = [\r\n            this.coords[0] + this.model.offset[0],\r\n            this.coords[1] + this.model.offset[1],\r\n            ...this.model.size\r\n        ];\r\n        if ((!this.isModelFlipped && !this.reverseModel) || (this.isModelFlipped && this.reverseModel))\r\n            this.canvasService.drawImage(this.model.image, modelCoords);\r\n        else\r\n            this.canvasService.drawFlippedImage(this.model.image, modelCoords);\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Decoration extends BasicObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = false;\r\n        this.setModelParams(config);\r\n        this.model = {\r\n            image: imageService.static[config.model.name],\r\n            offset: config.model.offset,\r\n            size: config.model.size\r\n        };\r\n    }\r\n    setModelParams(config) {\r\n        switch (config.model.name) {\r\n            case 'bush':\r\n                this.updateObjectSize(config, 1.66, 1);\r\n                break;\r\n            case 'herb':\r\n                this.updateObjectSize(config, 0.4, 0.5, true);\r\n                break;\r\n            case 'fence':\r\n                this.updateObjectSize(config, 1.2, 0.75);\r\n                break;\r\n            case 'fence_broken':\r\n                this.updateObjectSize(config, 1.2, 0.75);\r\n                break;\r\n            case 'rock':\r\n                this.updateObjectSize(config, 0.9, 0.53);\r\n                break;\r\n            case 'mushroomRed':\r\n                this.updateObjectSize(config, 0.6, 0.5, true);\r\n                break;\r\n            case 'mushroomBrown':\r\n                this.updateObjectSize(config, 0.6, 0.5, true);\r\n                break;\r\n        }\r\n    }\r\n    updateObjectSize(config, widthRate, heightRate, randomX = false) {\r\n        const xRandom = randomX ? Math.random() * 1.2 + 0.4 : 1;\r\n        this.coords[0] += (this.size[0] - this.size[0] * widthRate) / 2 * xRandom;\r\n        this.coords[1] += (this.size[1] - this.size[1] * heightRate);\r\n        this.size[0] *= widthRate;\r\n        this.size[1] *= heightRate;\r\n        config.model.size = [this.size[0], this.size[1]];\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { BasicObject } from \"./basic-object\";\r\nconst DEFAULT_CONFIG = {\r\n    maxSpeed: 100,\r\n    sideAcceleration: 0.2,\r\n    gravity: 2000,\r\n    maxFallSpeed: 800,\r\n    jumpPower: 800\r\n};\r\nexport class EntityObject extends BasicObject {\r\n    constructor(config, canvasService) {\r\n        super(config, canvasService);\r\n        this.vx = 0; // X-axis speed (in pixels per second)\r\n        this.vy = 0; // Y-axis speed (in pixels per second)\r\n        this.entityConfig = DEFAULT_CONFIG;\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n        this.inAir = false;\r\n        this.textures = {\r\n            time: 0,\r\n            stand: { image: null },\r\n            walk: { images: null, frequent: null },\r\n            jump: { image: null }\r\n        };\r\n    }\r\n    moveRight() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = false;\r\n        if (this.vx < 0)\r\n            this.vx = -this.slowDown(this.vx);\r\n        else\r\n            this.vx = this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    moveLeft() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = true;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    jump() {\r\n        if (!this.inAir) {\r\n            this.jumpButtonPressed = true;\r\n            this.inAir = true;\r\n            this.vy = this.entityConfig.jumpPower;\r\n            this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n        }\r\n    }\r\n    updateState(fps) {\r\n        this.fps = fps;\r\n        if (!this.sideButtonPressed)\r\n            this._stop();\r\n        if (!this.jumpButtonPressed)\r\n            this._fall();\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n    }\r\n    ;\r\n    setEntityConfig(entityConfig) {\r\n        this.entityConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), entityConfig);\r\n    }\r\n    stopFalling() {\r\n        this.inAir = false;\r\n        this.vy = 0;\r\n    }\r\n    startFalling() {\r\n        this.vy = this.applyGravity(0);\r\n    }\r\n    resetSideAcceleration() {\r\n        this.vx = 0;\r\n    }\r\n    /****************** Execute this if no buttons pressed *********************/\r\n    _stop() {\r\n        if (this.vx === 0)\r\n            return;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.slowDown(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    _fall() {\r\n        this.inAir = true;\r\n        this.vy = this.applyGravity(this.vy);\r\n        this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n    }\r\n    /****************** Helpers *********************/\r\n    applyTextures() {\r\n        let img;\r\n        this.textures.time += 1000 / this.fps;\r\n        if (this.textures.time >= 1000)\r\n            this.textures.time = 0;\r\n        if (this.inAir) {\r\n            img = this.textures.jump.image;\r\n        }\r\n        else if (this.vx != 0) {\r\n            this.calculateTextureIndex(this.textures.walk);\r\n            img = this.textures.walk.images[this.textures.walk.index];\r\n        }\r\n        else {\r\n            img = this.textures.stand.image;\r\n        }\r\n        img ? this.model.image = img : null;\r\n    }\r\n    calculateTextureIndex(anim) {\r\n        const frame = Math.floor(this.textures.time / (1000 / anim.frequent));\r\n        anim.index = frame - Math.floor(frame / anim.images.length) * anim.images.length;\r\n    }\r\n    applyGravity(vy) {\r\n        const ySpeed = vy - this.entityConfig.gravity / this.fps;\r\n        if (-ySpeed > this.entityConfig.maxFallSpeed)\r\n            return -this.entityConfig.maxFallSpeed;\r\n        else\r\n            return ySpeed;\r\n    }\r\n    speedUp(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed + this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed > this.entityConfig.maxSpeed)\r\n            return this.entityConfig.maxSpeed;\r\n        else\r\n            return newSpeed;\r\n    }\r\n    slowDown(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed - this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed < 0)\r\n            return 0;\r\n        else\r\n            return newSpeed;\r\n    }\r\n}\r\n","import { EntityObject } from \"../entity-object\";\r\nexport class Player extends EntityObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = true;\r\n        this.pressedDirection = null;\r\n        this.isLeftPressed = false;\r\n        this.isRightPressed = false;\r\n        this.isJumpPressed = false;\r\n        this.heightRate = 1.2;\r\n        this.widthRate = 0.8;\r\n        this.setEntityConfig({\r\n            maxSpeed: 350\r\n        });\r\n        const textures = imageService.players[config.model.name];\r\n        this.textures = {\r\n            time: 0,\r\n            stand: { image: textures.stand },\r\n            walk: { images: textures.walk, frequent: 6 },\r\n            jump: { image: textures.jump }\r\n        };\r\n        this.coords[1] = this.coords[1] - this.size[1] * (this.heightRate - 1);\r\n        this.size = [this.size[0] * this.widthRate, this.size[1] * this.heightRate];\r\n        this.model = {\r\n            image: textures.stand,\r\n            offset: config.model.offset,\r\n            size: [this.size[0], this.size[1]]\r\n        };\r\n        this.initEventListeners();\r\n    }\r\n    updateState(fps) {\r\n        switch (this.pressedDirection) {\r\n            case 'left':\r\n                super.moveLeft();\r\n                break;\r\n            case 'right':\r\n                super.moveRight();\r\n                break;\r\n        }\r\n        if (this.isJumpPressed)\r\n            super.jump();\r\n        super.updateState(fps);\r\n    }\r\n    initEventListeners() {\r\n        document.addEventListener('keydown', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = true;\r\n                    break;\r\n            }\r\n        });\r\n        document.addEventListener('keyup', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = false;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    updateDirection() {\r\n        if (this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = 'left';\r\n        }\r\n        else if (!this.isLeftPressed && this.isRightPressed) {\r\n            this.pressedDirection = 'right';\r\n        }\r\n        else if (!this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = null;\r\n        }\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Wall extends BasicObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = true;\r\n        this.model = {\r\n            image: imageService.static[config.model.name],\r\n            offset: config.model.offset,\r\n            size: config.model.size\r\n        };\r\n    }\r\n}\r\n","import { swapArrayElements } from \"../helpers/common-methods\";\r\nexport class GridService {\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.grid = {};\r\n        this.resetGrid();\r\n    }\r\n    getNeighbors(object) {\r\n        const output = new Set();\r\n        object.relatedCells.forEach(index => {\r\n            this.grid[index].forEach(o => {\r\n                if (o !== object)\r\n                    output.add(o);\r\n            });\r\n        });\r\n        return Array.from(output);\r\n    }\r\n    updateObjectPosition(o) {\r\n        this.removeObjectFromGrid(o);\r\n        this.addObjectToGrid(o);\r\n    }\r\n    // TODO: Check if it faster not remove/add all items, but update only changed items\r\n    removeObjectFromGrid(object) {\r\n        object.relatedCells.forEach(index => {\r\n            for (let [i, obj] of this.grid[index].entries()) {\r\n                if (obj === object) {\r\n                    // Swap our object with the last item in array and then remove last item (performance hack)\r\n                    swapArrayElements(this.grid[index], i, this.grid[index].length - 1);\r\n                    this.grid[index].pop();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        object.relatedCells = [];\r\n    }\r\n    addObjectToGrid(object) {\r\n        const relatedCells = this.getRelatedCells(object.coords, object.size);\r\n        relatedCells.forEach(index => this.grid[index].push(object));\r\n        object.relatedCells = relatedCells;\r\n    }\r\n    resetGrid() {\r\n        const cells = this.getRelatedCells([0, 0], [this.map.width, this.map.height]);\r\n        cells.forEach(index => this.grid[index] = []);\r\n    }\r\n    getRelatedCells(coords, size) {\r\n        const topLeftCorner = this.getCellCoords(coords);\r\n        const bottomRightCorner = this.getCellCoords([coords[0] + size[0], coords[1] + size[1]]);\r\n        const output = [];\r\n        for (let x = topLeftCorner[0]; x <= bottomRightCorner[0]; x++) {\r\n            for (let y = topLeftCorner[1]; y <= bottomRightCorner[1]; y++) {\r\n                output.push(this.getCellIndex([x, y]));\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    getCellCoords(objCoords) {\r\n        const x = Math.floor(objCoords[0] / this.map.cells.size);\r\n        const y = Math.floor(objCoords[1] / this.map.cells.size);\r\n        return [x, y];\r\n    }\r\n    getCellIndex(cellCoords) {\r\n        return cellCoords[0] + 'x' + cellCoords[1];\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { Decoration } from \"../objects/types/decoration.object\";\r\nimport { Player } from \"../objects/types/player.object\";\r\nimport { Wall } from \"../objects/types/wall.object\";\r\nimport { GridService } from \"./grid.service\";\r\nexport class ObjectService {\r\n    constructor(imageService, canvasService, config) {\r\n        this.imageService = imageService;\r\n        this.canvasService = canvasService;\r\n        this.background_objects = [];\r\n        this.static_objects = [];\r\n        this.map = {\r\n            width: config.map.width,\r\n            height: config.map.height,\r\n        };\r\n        this.gridService = new GridService(config.map);\r\n        this.init(config);\r\n    }\r\n    init(config) {\r\n        this.clearObjects();\r\n        this.player = new Player(config.player, this.canvasService, this.imageService);\r\n        for (let obj of config.objects) {\r\n            switch (obj.type) {\r\n                case 'wall':\r\n                    this.static_objects.push(new Wall(obj, this.canvasService, this.imageService));\r\n                    break;\r\n                case 'decoration':\r\n                    this.background_objects.push(new Decoration(obj, this.canvasService, this.imageService));\r\n                    break;\r\n            }\r\n        }\r\n        this.static_objects.forEach(o => this.gridService.addObjectToGrid(o));\r\n    }\r\n    renderObjects(fps) {\r\n        /* Background objects render */\r\n        this.background_objects.forEach(o => o.drawObject());\r\n        /* Static objects render */\r\n        this.static_objects.forEach(o => o.drawObject());\r\n        /* Player render */\r\n        this.renderDynamicObject(this.player, fps);\r\n        this.canvasService.updateCameraTranslation(...this.player.coords, ...this.player.size);\r\n    }\r\n    renderDynamicObject(object, fps) {\r\n        object.updateState(fps);\r\n        this.checkBounds(object);\r\n        this.gridService.updateObjectPosition(object);\r\n        this.checkAllCollisions(object, this.gridService.getNeighbors(object));\r\n        object.applyTextures();\r\n        // Round coords after all calculations to prevent visual collision\r\n        object.coords[0] = Math.round(object.coords[0]);\r\n        object.coords[1] = Math.round(object.coords[1]);\r\n        object.drawObject();\r\n    }\r\n    clearObjects() {\r\n        this.background_objects = [];\r\n        this.static_objects = [];\r\n    }\r\n    get allObjects() {\r\n        return [...this.static_objects];\r\n    }\r\n    checkBounds(obj) {\r\n        let [x, y] = obj.coords;\r\n        if (x < 0) {\r\n            x = 0;\r\n            obj.resetSideAcceleration();\r\n        }\r\n        else if (x + obj.size[0] > this.map.width) {\r\n            x = this.map.width - obj.size[0];\r\n            obj.resetSideAcceleration();\r\n        }\r\n        if (y < 0) {\r\n            y = 0;\r\n            obj.startFalling();\r\n        }\r\n        else if (y + obj.size[1] > this.map.height) {\r\n            y = this.map.height - obj.size[1];\r\n            obj.stopFalling();\r\n        }\r\n        obj.coords = [x, y];\r\n    }\r\n    checkAllCollisions(obj, objectsAround) {\r\n        let hasOverlaps = false;\r\n        objectsAround.forEach(o => this.checkCollision(obj, o) ? hasOverlaps = true : null);\r\n        if (hasOverlaps)\r\n            this.gridService.updateObjectPosition(obj);\r\n    }\r\n    checkCollision(o1, o2) {\r\n        // if o1 overlaps with o2, then o1 will be moved out from o2\r\n        // P.S. This function is hell for debugging :)\r\n        if (o2.hasCollision === false)\r\n            return;\r\n        let [o1_x1, o1_y1] = o1.coords;\r\n        const [o1_x2, o1_y2] = [o1.coords[0] + o1.size[0], o1.coords[1] + o1.size[1]];\r\n        const [o2_x1, o2_y1] = o2.coords;\r\n        const [o2_x2, o2_y2] = [o2.coords[0] + o2.size[0], o2.coords[1] + o2.size[1]];\r\n        // Check horizontal overlaps\r\n        let horizontalOverlap = false;\r\n        const h1 = o1_x2 - o2_x1;\r\n        const h2 = o1_x1 - o2_x2;\r\n        if ((h1 < 0 && h2 > 0) || (h1 > 0 && h2 < 0))\r\n            horizontalOverlap = true;\r\n        // Check vertical overlaps\r\n        let verticalOverlap = false;\r\n        const v1 = o1_y2 - o2_y1;\r\n        const v2 = o1_y1 - o2_y2;\r\n        if ((v1 < 0 && v2 > 0) || (v1 > 0 && v2 < 0))\r\n            verticalOverlap = true;\r\n        // If overlaps in all axes\r\n        if (verticalOverlap && horizontalOverlap) {\r\n            const hOffset = abs(h1) < abs(h2) ? h1 : h2;\r\n            const vOffset = abs(v1) < abs(v2) ? v1 : v2;\r\n            if (abs(hOffset) < abs(vOffset)) {\r\n                o1_x1 -= hOffset;\r\n                o1.resetSideAcceleration();\r\n            }\r\n            else {\r\n                o1_y1 -= vOffset;\r\n                if (vOffset > 0) {\r\n                    o1.stopFalling();\r\n                }\r\n                else {\r\n                    o1.startFalling();\r\n                }\r\n            }\r\n            o1.coords = [o1_x1, o1_y1];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class GameLoopService {\r\n    constructor(canvasService, objectService) {\r\n        this.canvasService = canvasService;\r\n        this.objectService = objectService;\r\n        this.isGamePaused = false;\r\n    }\r\n    start() {\r\n        this.isGamePaused = false;\r\n        this.frameStart = performance.now();\r\n        this.step();\r\n    }\r\n    stop() {\r\n        this.isGamePaused = true;\r\n    }\r\n    // Methods that should be executed during single game frame\r\n    frame() {\r\n        this.canvasService.clearCanvas();\r\n        this.objectService.renderObjects(this.fps);\r\n        this.canvasService.drawFPS(this.fps);\r\n    }\r\n    step() {\r\n        const frameEnd = performance.now();\r\n        this.fps = Math.floor(1000 / (frameEnd - this.frameStart));\r\n        this.frameStart = performance.now();\r\n        if (this.fps < 25)\r\n            this.fps = 25;\r\n        if (this.fps > 1000)\r\n            this.fps = 1000;\r\n        this.frame();\r\n        if (!this.isGamePaused)\r\n            setTimeout(() => this.step(), 0);\r\n    }\r\n}\r\n","export class ConfigService {\r\n    constructor(config) {\r\n        this.config = this.applyDefaultConfig(config);\r\n        this.parsedConfig = this.parseConfig(this.config);\r\n    }\r\n    getParsedConfig() {\r\n        return this.parsedConfig;\r\n    }\r\n    parseConfig(config) {\r\n        const parsedConfig = {\r\n            canvas: Object.assign({}, config.canvas),\r\n            map: {\r\n                width: config.map.width * config.map.cellSize,\r\n                height: config.map.height * config.map.cellSize,\r\n                cells: {\r\n                    size: config.map.cellSize,\r\n                    horizontal: config.map.width,\r\n                    vertical: config.map.height\r\n                }\r\n            },\r\n            camera: this.getParsedCameraConfig(config),\r\n            player: this.getParsedObjectConfig(config.player, config),\r\n            objects: config.objects.map(obj => this.getParsedObjectConfig(obj, config))\r\n        };\r\n        return parsedConfig;\r\n    }\r\n    getParsedObjectConfig(obj, config) {\r\n        const parsedConfig = {\r\n            type: obj.type,\r\n            coords: [obj.coords[0] * config.map.cellSize, obj.coords[1] * config.map.cellSize],\r\n            size: [config.map.cellSize, config.map.cellSize],\r\n            model: {\r\n                name: obj.model,\r\n                offset: [0, 0],\r\n                size: [config.map.cellSize, config.map.cellSize]\r\n            }\r\n        };\r\n        return parsedConfig;\r\n    }\r\n    getParsedCameraConfig(config) {\r\n        const breakpoints = {\r\n            top: getPoint(config.canvas.height, config.camera.top),\r\n            right: getPoint(config.canvas.width, config.camera.right),\r\n            bottom: getPoint(config.canvas.height, config.camera.bottom),\r\n            left: getPoint(config.canvas.width, config.camera.left)\r\n        };\r\n        return breakpoints;\r\n        function getPoint(x, y) {\r\n            const [a, b] = y.split(':');\r\n            return x / parseInt(b) * parseInt(a);\r\n        }\r\n    }\r\n    /************** DEFAULT CONFIG **************/\r\n    applyDefaultConfig(config) {\r\n        const def = this.getDefaultConfig();\r\n        return {\r\n            canvas: Object.assign(Object.assign({}, def.canvas), config.canvas),\r\n            map: Object.assign(Object.assign({}, def.map), config.map),\r\n            camera: Object.assign(Object.assign({}, def.camera), config.camera),\r\n            player: Object.assign({}, config.player),\r\n            objects: [...def.objects, ...config.objects]\r\n        };\r\n    }\r\n    getDefaultConfig() {\r\n        return {\r\n            canvas: {\r\n                width: 900,\r\n                height: 600\r\n            },\r\n            map: {\r\n                width: 20,\r\n                height: 10,\r\n                cellSize: 70,\r\n            },\r\n            camera: {\r\n                top: '1:4',\r\n                right: '1:2',\r\n                bottom: '1:4',\r\n                left: '1:4',\r\n            },\r\n            player: null,\r\n            objects: []\r\n        };\r\n    }\r\n}\r\n","import CanvasService from \"./services/canvas.service\";\r\nimport { ImageService } from \"./services/image.service\";\r\nimport { ObjectService } from \"./services/object.service\";\r\nimport { GameLoopService } from \"./services/game-loop.service\";\r\nimport { ConfigService } from \"./services/config.service\";\r\nexport default class Platformer2D {\r\n    constructor(canvas, config) {\r\n        this.imageService = new ImageService();\r\n        this.configService = new ConfigService(config);\r\n        this.config = this.configService.getParsedConfig();\r\n        this.canvasService = new CanvasService(canvas, this.config, this.imageService);\r\n        this.objectService = new ObjectService(this.imageService, this.canvasService, this.config);\r\n        this.gameLoopService = new GameLoopService(this.canvasService, this.objectService);\r\n        this.imageService.isLoaded.then(() => this.init());\r\n    }\r\n    init() {\r\n        this.gameLoopService.start();\r\n    }\r\n}\r\n;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const GAME_CONFIG = {\r\n    canvas: {\r\n        width: 900,\r\n        height: 600\r\n    },\r\n    map: {\r\n        width: 20,\r\n        height: 10,\r\n        cellSize: 70,\r\n    },\r\n    camera: {\r\n        top: '1:4',\r\n        right: '1:2',\r\n        bottom: '1:4',\r\n        left: '1:4',\r\n    },\r\n    player: { coords: [2, 7], type: 'player', model: 'alien2', },\r\n    objects: [\r\n        { coords: [0, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [1, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [2, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [3, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [4, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [5, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [6, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [7, 8], type: 'wall', model: 'grassMid' },\r\n        { coords: [0, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [1, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [2, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [3, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [4, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [5, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [6, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [7, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [8, 9], type: 'wall', model: 'grassCenter' },\r\n        { coords: [8, 8], type: 'wall', model: 'grassCenter' },\r\n        { coords: [8, 7], type: 'wall', model: 'grassCenter' },\r\n        { coords: [8, 6], type: 'wall', model: 'grassMid' },\r\n        { coords: [9, 7], type: 'wall', model: 'grassMid' },\r\n        { coords: [10, 7], type: 'wall', model: 'grassMid' },\r\n        { coords: [12, 9], type: 'wall', model: 'grassMid' },\r\n        // Decorations\r\n        { coords: [1, 7], type: 'decoration', model: 'bush' },\r\n        { coords: [3, 7], type: 'decoration', model: 'fence' },\r\n        { coords: [4, 7], type: 'decoration', model: 'fence_broken' },\r\n        { coords: [5, 7], type: 'decoration', model: 'fence' },\r\n        { coords: [6, 7], type: 'decoration', model: 'rock' },\r\n        { coords: [7, 7], type: 'decoration', model: 'herb' },\r\n        { coords: [9, 6], type: 'decoration', model: 'mushroomBrown' },\r\n        { coords: [10, 6], type: 'decoration', model: 'mushroomRed' },\r\n    ]\r\n};\r\nexport default GAME_CONFIG;\r\n","import Platformer2D from \"../../lib/index\";\r\nimport GAME_CONFIG from \"./platformer-config\";\r\nconst canvas = document.getElementById('game-canvas');\r\nnew Platformer2D(canvas, GAME_CONFIG);\r\n"],"sourceRoot":""}