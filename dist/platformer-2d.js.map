{"version":3,"sources":["webpack://Platformer2D/webpack/universalModuleDefinition","webpack://Platformer2D/webpack/bootstrap","webpack://Platformer2D/webpack/runtime/define property getters","webpack://Platformer2D/webpack/runtime/hasOwnProperty shorthand","webpack://Platformer2D/webpack/runtime/make namespace object","webpack://Platformer2D/./src/services/canvas.service.ts","webpack://Platformer2D/./src/services/image.service.ts","webpack://Platformer2D/./src/helpers/common-methods.ts","webpack://Platformer2D/./src/objects/basic-object.ts","webpack://Platformer2D/./src/objects/entity-object.ts","webpack://Platformer2D/./src/objects/player/player.object.ts","webpack://Platformer2D/./src/objects/wall/wall.object.ts","webpack://Platformer2D/./src/services/grid.service.ts","webpack://Platformer2D/./src/services/object.service.ts","webpack://Platformer2D/./src/services/game-loop.service.ts","webpack://Platformer2D/./src/index.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","CanvasService","constructor","canvasElement","config","this","element","canvas","getContext","canvasHeight","height","canvasWidth","width","init","clearCanvas","clearRect","drawImage","img","coords","drawFlippedImage","translate","scale","setTransform","drawFPS","fps","font","fillText","moveCamera","x","y","console","log","ImageService","files","bear","load","grass","filesCount","keys","length","loadedFilesCount","isLoaded","Promise","res","finishLoading","file","Image","onload","fileLoaded","bind","src","abs","num","BasicObject","imageService","canvasService","isModelFlipped","relatedCells","size","model","name","modelName","image","offset","modelOffset","modelSize","drawObject","modelCoords","DEFAULT_CONFIG","maxSpeed","sideAcceleration","gravity","maxFallSpeed","jumpPower","EntityObject","super","vx","vy","entityConfig","sideButtonPressed","jumpButtonPressed","inAir","moveRight","slowDown","speedUp","moveLeft","jump","updateState","_stop","_fall","setEntityConfig","assign","stopFalling","startFalling","applyGravity","resetSideAcceleration","ySpeed","currSpeed","newSpeed","Player","pressedDirection","isLeftPressed","isRightPressed","isJumpPressed","hasCollision","initEventListeners","document","addEventListener","e","updateDirection","Wall","GridService","mapWidth","mapHeight","grid","cellWidth","cellHeight","resetGrid","getNeighbors","object","output","Set","forEach","index","add","Array","from","updateObjectPosition","removeObjectFromGrid","addObjectToGrid","i","entries","index1","array","index2","splice","pop","getRelatedCells","push","topLeftCorner","getCellCoords","bottomRightCorner","getCellIndex","objCoords","Math","floor","cellCoords","ObjectService","staticObjects","dynamicObjects","mapConfig","game","map","objectsConfig","objects","gridService","clearObjects","type","renderObjects","checkBounds","checkAllCollisions","objectsAround","hasOverlaps","checkCollision","o1","o2","o1_x1","o1_y1","o1_x2","o1_y2","o2_x1","o2_y1","o2_x2","o2_y2","horizontalOverlap","h1","h2","verticalOverlap","v1","v2","hOffset","vOffset","GameLoopService","objectService","isGamePaused","start","frameStart","performance","now","step","stop","frame","frameEnd","setTimeout","Platformer2D","gameLoopService","then"],"mappings":"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","file":"platformer-2d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Platformer2D\"] = factory();\n\telse\n\t\troot[\"Platformer2D\"] = factory();\n})(self, function() {\nreturn ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// icons https://www.studio-maximus.com/works/apps/birds-to-space/\r\nexport default class CanvasService {\r\n    constructor(canvasElement, config) {\r\n        this.element = canvasElement;\r\n        this.canvas = canvasElement.getContext('2d');\r\n        this.canvasHeight = config.canvas.height;\r\n        this.canvasWidth = config.canvas.width;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.element.width = this.canvasWidth;\r\n        this.element.height = this.canvasHeight;\r\n    }\r\n    clearCanvas() {\r\n        this.canvas.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    }\r\n    drawImage(img, coords) {\r\n        this.canvas.drawImage(img, ...coords);\r\n    }\r\n    drawFlippedImage(img, coords) {\r\n        this.canvas.translate(coords[0] + coords[2], coords[1]);\r\n        this.canvas.scale(-1, 1);\r\n        this.canvas.drawImage(img, 0, 0, coords[2], coords[3]);\r\n        this.canvas.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n    drawFPS(fps) {\r\n        this.canvas.font = '14px sans-serif';\r\n        this.canvas.fillText('FPS: ' + fps, 0, 14);\r\n    }\r\n    moveCamera(x, y) {\r\n        console.log(123);\r\n        this.canvas.translate(x, y);\r\n    }\r\n}\r\n","// 1) Import image\r\nimport bear from '../assets/images/bear.svg';\r\nimport grass from '../assets/images/grass.jpg';\r\nexport class ImageService {\r\n    constructor() {\r\n        // 3) Load image to files object\r\n        this.files = {\r\n            bear: this.load(bear),\r\n            grass: this.load(grass),\r\n        };\r\n        this.filesCount = Object.keys(this.files).length;\r\n        this.loadedFilesCount = 0;\r\n        this.isLoaded = new Promise(res => this.finishLoading = res);\r\n    }\r\n    load(file) {\r\n        const img = new Image();\r\n        img.onload = this.fileLoaded.bind(this);\r\n        img.src = file;\r\n        return img;\r\n    }\r\n    fileLoaded() {\r\n        if (++this.loadedFilesCount >= this.filesCount)\r\n            this.finishLoading();\r\n    }\r\n}\r\n","export function swapArrayElements(array, index1, index2) {\r\n    array[index2] = array.splice(index1, 1, array[index2])[0];\r\n}\r\nexport function abs(num) {\r\n    if (num < 0)\r\n        return -num;\r\n    return num;\r\n}\r\n","export class BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        this.canvasService = canvasService;\r\n        this.isModelFlipped = false;\r\n        this.relatedCells = [];\r\n        this.coords = config.coords;\r\n        this.size = config.size;\r\n        this.model = {\r\n            name: config.modelName,\r\n            image: imageService.files[config.modelName],\r\n            offset: config.modelOffset,\r\n            size: config.modelSize\r\n        };\r\n    }\r\n    drawObject() {\r\n        const modelCoords = [\r\n            this.coords[0] + this.model.offset[0],\r\n            this.coords[1] + this.model.offset[1],\r\n            ...this.model.size\r\n        ];\r\n        if (this.isModelFlipped)\r\n            this.canvasService.drawFlippedImage(this.model.image, modelCoords);\r\n        else\r\n            this.canvasService.drawImage(this.model.image, modelCoords);\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { BasicObject } from \"./basic-object\";\r\nconst DEFAULT_CONFIG = {\r\n    maxSpeed: 100,\r\n    sideAcceleration: 0.2,\r\n    gravity: 2000,\r\n    maxFallSpeed: 2000,\r\n    jumpPower: 800\r\n};\r\nexport class EntityObject extends BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.vx = 0; // X-axis speed (in pixels per second)\r\n        this.vy = 0; // Y-axis speed (in pixels per second)\r\n        this.entityConfig = DEFAULT_CONFIG;\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n        this.inAir = false;\r\n    }\r\n    // TODO: Don't let player to go out of bounds\r\n    moveRight() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = true;\r\n        if (this.vx < 0)\r\n            this.vx = -this.slowDown(this.vx);\r\n        else\r\n            this.vx = this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    moveLeft() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = false;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    jump() {\r\n        if (!this.inAir) {\r\n            this.jumpButtonPressed = true;\r\n            this.inAir = true;\r\n            this.vy = this.entityConfig.jumpPower;\r\n            this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n        }\r\n    }\r\n    updateState(fps) {\r\n        this.fps = fps;\r\n        if (!this.sideButtonPressed)\r\n            this._stop();\r\n        if (!this.jumpButtonPressed)\r\n            this._fall();\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n    }\r\n    ;\r\n    setEntityConfig(entityConfig) {\r\n        this.entityConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), entityConfig);\r\n    }\r\n    stopFalling() {\r\n        this.inAir = false;\r\n        this.vy = 0;\r\n    }\r\n    startFalling() {\r\n        this.vy = this.applyGravity(0);\r\n    }\r\n    resetSideAcceleration() {\r\n        this.vx = 0;\r\n    }\r\n    /****************** Execute this if no buttons pressed *********************/\r\n    _stop() {\r\n        if (this.vx === 0)\r\n            return;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.slowDown(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    _fall() {\r\n        // if (!this.inAir) return;\r\n        this.inAir = true;\r\n        this.vy = this.applyGravity(this.vy);\r\n        this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n    }\r\n    /****************** Helpers *********************/\r\n    applyGravity(vy) {\r\n        const ySpeed = vy - this.entityConfig.gravity / this.fps;\r\n        if (-ySpeed > this.entityConfig.maxFallSpeed)\r\n            return -this.entityConfig.maxFallSpeed;\r\n        else\r\n            return ySpeed;\r\n    }\r\n    speedUp(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed + this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed > this.entityConfig.maxSpeed)\r\n            return this.entityConfig.maxSpeed;\r\n        else\r\n            return newSpeed;\r\n    }\r\n    slowDown(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed - this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed < 0)\r\n            return 0;\r\n        else\r\n            return newSpeed;\r\n    }\r\n}\r\n","import { EntityObject } from \"../entity-object\";\r\nexport class Player extends EntityObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.pressedDirection = null;\r\n        this.isLeftPressed = false;\r\n        this.isRightPressed = false;\r\n        this.isJumpPressed = false;\r\n        this.hasCollision = true;\r\n        this.setEntityConfig({\r\n            maxSpeed: 350\r\n        });\r\n        this.initEventListeners();\r\n    }\r\n    updateState(fps) {\r\n        switch (this.pressedDirection) {\r\n            case 'left':\r\n                super.moveLeft();\r\n                break;\r\n            case 'right':\r\n                super.moveRight();\r\n                break;\r\n        }\r\n        if (this.isJumpPressed)\r\n            super.jump();\r\n        super.updateState(fps);\r\n    }\r\n    initEventListeners() {\r\n        document.addEventListener('keydown', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = true;\r\n                    break;\r\n            }\r\n        });\r\n        document.addEventListener('keyup', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = false;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    updateDirection() {\r\n        if (this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = 'left';\r\n        }\r\n        else if (!this.isLeftPressed && this.isRightPressed) {\r\n            this.pressedDirection = 'right';\r\n        }\r\n        else if (!this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = null;\r\n        }\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Wall extends BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.hasCollision = true;\r\n    }\r\n}\r\n","import { swapArrayElements } from \"../helpers/common-methods\";\r\nconst DEFAULT = {\r\n    cellWidth: 150,\r\n    cellHeight: 150\r\n};\r\nexport class GridService {\r\n    constructor(mapWidth, mapHeight) {\r\n        this.mapWidth = mapWidth;\r\n        this.mapHeight = mapHeight;\r\n        this.grid = {};\r\n        this.cellWidth = DEFAULT.cellWidth;\r\n        this.cellHeight = DEFAULT.cellHeight;\r\n        this.resetGrid();\r\n    }\r\n    getNeighbors(object) {\r\n        const output = new Set();\r\n        object.relatedCells.forEach(index => {\r\n            this.grid[index].forEach(o => {\r\n                if (o !== object)\r\n                    output.add(o);\r\n            });\r\n        });\r\n        return Array.from(output);\r\n    }\r\n    updateObjectPosition(o) {\r\n        this.removeObjectFromGrid(o);\r\n        this.addObjectToGrid(o);\r\n    }\r\n    // TODO: Check if it faster not remove/add all items, but update only changed items\r\n    removeObjectFromGrid(object) {\r\n        object.relatedCells.forEach(index => {\r\n            for (let [i, obj] of this.grid[index].entries()) {\r\n                if (obj === object) {\r\n                    // Swap our object with the last item in array and then remove last item (performance hack)\r\n                    swapArrayElements(this.grid[index], i, this.grid[index].length - 1);\r\n                    this.grid[index].pop();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        object.relatedCells = [];\r\n    }\r\n    addObjectToGrid(object) {\r\n        const relatedCells = this.getRelatedCells(object.coords, object.size);\r\n        relatedCells.forEach(index => this.grid[index].push(object));\r\n        object.relatedCells = relatedCells;\r\n    }\r\n    resetGrid() {\r\n        const cells = this.getRelatedCells([0, 0], [this.mapWidth, this.mapHeight]);\r\n        cells.forEach(index => this.grid[index] = []);\r\n    }\r\n    getRelatedCells(coords, size) {\r\n        const topLeftCorner = this.getCellCoords(coords);\r\n        const bottomRightCorner = this.getCellCoords([coords[0] + size[0], coords[1] + size[1]]);\r\n        const output = [];\r\n        for (let x = topLeftCorner[0]; x <= bottomRightCorner[0]; x++) {\r\n            for (let y = topLeftCorner[1]; y <= bottomRightCorner[1]; y++) {\r\n                output.push(this.getCellIndex([x, y]));\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    getCellCoords(objCoords) {\r\n        const x = Math.floor(objCoords[0] / this.cellWidth);\r\n        const y = Math.floor(objCoords[1] / this.cellHeight);\r\n        return [x, y];\r\n    }\r\n    getCellIndex(cellCoords) {\r\n        return cellCoords[0] + 'x' + cellCoords[1];\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { Player } from \"../objects/player/player.object\";\r\nimport { Wall } from \"../objects/wall/wall.object\";\r\nimport { GridService } from \"./grid.service\";\r\nexport class ObjectService {\r\n    constructor(imageService, canvasService, config) {\r\n        this.imageService = imageService;\r\n        this.canvasService = canvasService;\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n        this.mapConfig = config.game.map;\r\n        this.objectsConfig = config.game.objects;\r\n        this.gridService = new GridService(this.mapConfig.width, this.mapConfig.height);\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.clearObjects();\r\n        for (let obj of this.objectsConfig) {\r\n            switch (obj.type) {\r\n                case 'wall':\r\n                    this.staticObjects.push(new Wall(obj, this.imageService, this.canvasService));\r\n                    break;\r\n                case 'player':\r\n                    this.dynamicObjects.push(new Player(obj, this.imageService, this.canvasService));\r\n                    break;\r\n            }\r\n        }\r\n        this.staticObjects.forEach(o => this.gridService.addObjectToGrid(o));\r\n    }\r\n    renderObjects(fps) {\r\n        this.staticObjects.forEach(o => o.drawObject());\r\n        this.dynamicObjects.forEach(o => {\r\n            o.updateState(fps);\r\n            this.checkBounds(o);\r\n            this.gridService.updateObjectPosition(o);\r\n            this.checkAllCollisions(o, this.gridService.getNeighbors(o));\r\n            o.drawObject();\r\n        });\r\n    }\r\n    clearObjects() {\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n    }\r\n    get allObjects() {\r\n        return [...this.staticObjects, ...this.dynamicObjects];\r\n    }\r\n    checkBounds(obj) {\r\n        let [x, y] = obj.coords;\r\n        if (x < 0) {\r\n            x = 0;\r\n            obj.resetSideAcceleration();\r\n        }\r\n        else if (x + obj.size[0] > this.mapConfig.width) {\r\n            x = this.mapConfig.width - obj.size[0];\r\n            obj.resetSideAcceleration();\r\n        }\r\n        if (y < 0) {\r\n            y = 0;\r\n            obj.startFalling();\r\n        }\r\n        else if (y + obj.size[1] > this.mapConfig.height) {\r\n            y = this.mapConfig.height - obj.size[1];\r\n            obj.stopFalling();\r\n        }\r\n        obj.coords = [x, y];\r\n    }\r\n    checkAllCollisions(obj, objectsAround) {\r\n        let hasOverlaps = false;\r\n        objectsAround.forEach(o => this.checkCollision(obj, o) ? hasOverlaps = true : null);\r\n        if (hasOverlaps)\r\n            this.gridService.updateObjectPosition(obj);\r\n    }\r\n    checkCollision(o1, o2) {\r\n        // if o1 overlaps with o2, then o1 will be moved out from o2\r\n        // P.S. This function is hell for debugging :)\r\n        let [o1_x1, o1_y1] = o1.coords;\r\n        const [o1_x2, o1_y2] = [o1.coords[0] + o1.size[0], o1.coords[1] + o1.size[1]];\r\n        const [o2_x1, o2_y1] = o2.coords;\r\n        const [o2_x2, o2_y2] = [o2.coords[0] + o2.size[0], o2.coords[1] + o2.size[1]];\r\n        // Check horizontal overlaps\r\n        let horizontalOverlap = false;\r\n        const h1 = o1_x2 - o2_x1;\r\n        const h2 = o1_x1 - o2_x2;\r\n        if ((h1 < 0 && h2 > 0) || (h1 > 0 && h2 < 0))\r\n            horizontalOverlap = true;\r\n        // Check vertical overlaps\r\n        let verticalOverlap = false;\r\n        const v1 = o1_y2 - o2_y1;\r\n        const v2 = o1_y1 - o2_y2;\r\n        if ((v1 < 0 && v2 > 0) || (v1 > 0 && v2 < 0))\r\n            verticalOverlap = true;\r\n        // If overlaps in all axes\r\n        if (verticalOverlap && horizontalOverlap) {\r\n            const hOffset = abs(h1) < abs(h2) ? h1 : h2;\r\n            const vOffset = abs(v1) < abs(v2) ? v1 : v2;\r\n            if (abs(hOffset) < abs(vOffset)) {\r\n                o1_x1 -= hOffset;\r\n                o1.resetSideAcceleration();\r\n            }\r\n            else {\r\n                o1_y1 -= vOffset;\r\n                if (vOffset > 0) {\r\n                    o1.stopFalling();\r\n                }\r\n                else {\r\n                    o1.startFalling();\r\n                }\r\n            }\r\n            o1.coords = [o1_x1, o1_y1];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class GameLoopService {\r\n    constructor(canvasService, objectService) {\r\n        this.canvasService = canvasService;\r\n        this.objectService = objectService;\r\n        this.isGamePaused = false;\r\n    }\r\n    start() {\r\n        this.isGamePaused = false;\r\n        this.frameStart = performance.now();\r\n        this.step();\r\n    }\r\n    stop() {\r\n        this.isGamePaused = true;\r\n    }\r\n    // Methods that should be executed during single game frame\r\n    frame() {\r\n        this.canvasService.clearCanvas();\r\n        this.objectService.renderObjects(this.fps);\r\n        this.canvasService.drawFPS(this.fps);\r\n    }\r\n    step() {\r\n        const frameEnd = performance.now();\r\n        this.fps = Math.floor(1000 / (frameEnd - this.frameStart));\r\n        this.frameStart = performance.now();\r\n        this.frame();\r\n        if (!this.isGamePaused)\r\n            setTimeout(() => this.step(), 0);\r\n    }\r\n}\r\n","import CanvasService from \"./services/canvas.service\";\r\nimport { ImageService } from \"./services/image.service\";\r\nimport { ObjectService } from \"./services/object.service\";\r\nimport { GameLoopService } from \"./services/game-loop.service\";\r\nexport default class Platformer2D {\r\n    constructor(canvas, config) {\r\n        this.config = config;\r\n        this.imageService = new ImageService();\r\n        this.canvasService = new CanvasService(canvas, config);\r\n        this.objectService = new ObjectService(this.imageService, this.canvasService, config);\r\n        this.gameLoopService = new GameLoopService(this.canvasService, this.objectService);\r\n        this.imageService.isLoaded.then(() => this.init());\r\n    }\r\n    init() {\r\n        this.gameLoopService.start();\r\n    }\r\n}\r\n;\r\n"],"sourceRoot":""}