{"version":3,"sources":["webpack://platformer-2d/webpack/universalModuleDefinition","webpack://platformer-2d/webpack/bootstrap","webpack://platformer-2d/webpack/runtime/define property getters","webpack://platformer-2d/webpack/runtime/hasOwnProperty shorthand","webpack://platformer-2d/webpack/runtime/make namespace object","webpack://platformer-2d/./lib/services/canvas.service.ts","webpack://platformer-2d/./lib/services/image.service.ts","webpack://platformer-2d/./lib/helpers/common-methods.ts","webpack://platformer-2d/./lib/objects/basic-object.ts","webpack://platformer-2d/./lib/objects/types/decoration.object.ts","webpack://platformer-2d/./lib/objects/entity-object.ts","webpack://platformer-2d/./lib/objects/types/player.object.ts","webpack://platformer-2d/./lib/objects/types/wall.object.ts","webpack://platformer-2d/./lib/services/grid.service.ts","webpack://platformer-2d/./lib/services/object.service.ts","webpack://platformer-2d/./lib/services/game-loop.service.ts","webpack://platformer-2d/./lib/services/config.service.ts","webpack://platformer-2d/./lib/index.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","CanvasService","constructor","canvasElement","config","imageService","this","translation","h","v","backgroundImage","background","background1","element","canvas","assign","ctx","getContext","map","width","height","breakpoints","camera","updateCameraTranslation","x","y","w","transX","transY","left","right","translate","top","bottom","clearCanvas","drawImage","img","coords","drawFlippedImage","scale","setTransform","drawFPS","fps","font","fillText","ImageService","static","grassMid","load","grassCenter","bush","fence","fence_broken","herb","rock","mushroomRed","mushroomBrown","players","alien1","stand","alien1_stand","jump","alien1_jump","walk","alien1_walk1","alien1_walk2","alien2","alien2_stand","alien2_jump","alien2_walk1","alien2_walk2","filesCount","loadedFilesCount","isLoaded","Promise","res","finishLoading","file","Image","onload","fileLoaded","bind","src","abs","num","BasicObject","canvasService","relatedCells","isModelFlipped","reverseModel","size","drawObject","modelCoords","model","offset","image","Decoration","super","hasCollision","setModelParams","name","updateObjectSize","widthRate","heightRate","randomX","xRandom","Math","random","DEFAULT_CONFIG","maxSpeed","sideAcceleration","gravity","maxFallSpeed","jumpPower","EntityObject","vx","vy","entityConfig","sideButtonPressed","jumpButtonPressed","inAir","textures","time","images","frequent","moveRight","slowDown","speedUp","moveLeft","updateState","_stop","_fall","setEntityConfig","stopFalling","startFalling","applyGravity","resetSideAcceleration","applyTextures","calculateTextureIndex","index","anim","frame","floor","length","ySpeed","currSpeed","newSpeed","Player","pressedDirection","isLeftPressed","isRightPressed","isJumpPressed","initEventListeners","document","addEventListener","e","updateDirection","Wall","GridService","grid","resetGrid","getNeighbors","object","output","Set","forEach","add","Array","from","updateObjectPosition","removeObjectFromGrid","addObjectToGrid","i","entries","index1","array","index2","splice","pop","getRelatedCells","push","topLeftCorner","getCellCoords","bottomRightCorner","getCellIndex","objCoords","cells","cellCoords","ObjectService","background_objects","static_objects","gridService","init","clearObjects","player","objects","type","renderObjects","renderDynamicObject","checkBounds","checkAllCollisions","round","objectsAround","hasOverlaps","checkCollision","o1","o2","o1_x1","o1_y1","o1_x2","o1_y2","o2_x1","o2_y1","o2_x2","o2_y2","horizontalOverlap","h1","h2","verticalOverlap","v1","v2","hOffset","vOffset","GameLoopService","objectService","isGamePaused","start","frameStart","performance","now","step","stop","frameEnd","setTimeout","ConfigService","applyDefaultConfig","parsedConfig","parseConfig","getParsedConfig","cellSize","horizontal","vertical","getParsedCameraConfig","getParsedObjectConfig","getPoint","a","b","split","parseInt","def","getDefaultConfig","Platformer2D","configService","gameLoopService","then"],"mappings":"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","file":"dist/platformer-2d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Platformer2D\"] = factory();\n\telse\n\t\troot[\"Platformer2D\"] = factory();\n})(self, function() {\nreturn ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class CanvasService {\r\n    constructor(canvasElement, config, imageService) {\r\n        this.translation = {\r\n            h: 0,\r\n            v: 0\r\n        };\r\n        this.backgroundImage = imageService.background.background1;\r\n        this.element = canvasElement;\r\n        this.canvas = Object.assign(Object.assign({}, config.canvas), { ctx: canvasElement.getContext('2d') });\r\n        this.map = {\r\n            width: config.map.width,\r\n            height: config.map.height\r\n        };\r\n        this.element.width = this.canvas.width;\r\n        this.element.height = this.canvas.height;\r\n        this.breakpoints = config.camera;\r\n    }\r\n    updateCameraTranslation(x, y, w, h) {\r\n        // P.S. Don't try to understand this method :# This is hell\r\n        // Horizontal translation\r\n        let transX;\r\n        if (this.translation.h + this.breakpoints.left > x) {\r\n            transX = this.translation.h - (this.breakpoints.left + this.translation.h - x);\r\n        }\r\n        else if (this.translation.h + this.canvas.width - this.breakpoints.right < x + w) {\r\n            transX = this.translation.h + (x + w - (this.translation.h + this.canvas.width - this.breakpoints.right));\r\n        }\r\n        if (transX != null && transX != this.translation.h && transX >= 0 && transX <= this.map.width - this.canvas.width) {\r\n            this.canvas.ctx.translate(this.translation.h - transX, 0);\r\n            this.translation.h = transX;\r\n        }\r\n        if (transX != null && transX != this.translation.h) {\r\n            if (transX < 0) {\r\n                this.canvas.ctx.translate(0, this.translation.h);\r\n                this.translation.h = 0;\r\n            }\r\n            else if (transX > this.map.width - this.canvas.width) {\r\n                this.canvas.ctx.translate(0, this.canvas.width - this.map.width + this.translation.h);\r\n                this.translation.h = this.map.width - this.canvas.width;\r\n            }\r\n            else {\r\n                this.canvas.ctx.translate(0, this.translation.h - transX);\r\n                this.translation.h = transX;\r\n            }\r\n        }\r\n        // Vertical translation\r\n        let transY;\r\n        if (this.translation.v + this.breakpoints.top > y) {\r\n            transY = this.translation.v - (this.breakpoints.top + this.translation.v - y);\r\n        }\r\n        else if (this.translation.v + this.canvas.height - this.breakpoints.bottom < y + h) {\r\n            transY = this.translation.v + (y + h - (this.translation.v + this.canvas.height - this.breakpoints.bottom));\r\n        }\r\n        if (transY != null && transY != this.translation.v) {\r\n            if (transY < 0) {\r\n                this.canvas.ctx.translate(0, this.translation.v);\r\n                this.translation.v = 0;\r\n            }\r\n            else if (transY > this.map.height - this.canvas.height) {\r\n                this.canvas.ctx.translate(0, this.canvas.height - this.map.height + this.translation.v);\r\n                this.translation.v = this.map.height - this.canvas.height;\r\n            }\r\n            else {\r\n                this.canvas.ctx.translate(0, this.translation.v - transY);\r\n                this.translation.v = transY;\r\n            }\r\n        }\r\n    }\r\n    clearCanvas() {\r\n        this.canvas.ctx.drawImage(this.backgroundImage, 0 + this.translation.h, 0 + this.translation.v, this.canvas.width, this.canvas.height);\r\n    }\r\n    drawImage(img, coords) {\r\n        this.canvas.ctx.drawImage(img, ...coords);\r\n    }\r\n    drawFlippedImage(img, coords) {\r\n        this.canvas.ctx.translate(coords[0] + coords[2], coords[1]);\r\n        this.canvas.ctx.scale(-1, 1);\r\n        this.canvas.ctx.drawImage(img, 0, 0, coords[2], coords[3]);\r\n        this.canvas.ctx.setTransform(1, 0, 0, 1, -this.translation.h, -this.translation.v);\r\n    }\r\n    drawFPS(fps) {\r\n        this.canvas.ctx.font = '14px sans-serif';\r\n        this.canvas.ctx.fillText('FPS: ' + fps, 0 + this.translation.h, 14 + this.translation.v);\r\n    }\r\n}\r\n","// 1) Import image\r\n/** Static objects */\r\nimport grassMid from '../assets/grass/grassMid.svg';\r\nimport grassCenter from '../assets/grass/grassCenter.svg';\r\nimport bush from '../assets/decorations/bush.svg';\r\nimport fence from '../assets/decorations/fence.svg';\r\nimport fence_broken from '../assets/decorations/fence_broken.svg';\r\nimport herb from '../assets/decorations/herb.svg';\r\nimport rock from '../assets/decorations/rock.svg';\r\nimport mushroomRed from '../assets/decorations/mushroomRed.svg';\r\nimport mushroomBrown from '../assets/decorations/mushroomBrown.svg';\r\n/** Players */\r\nimport alien1_stand from '../assets/player/alien1/alien1_stand.svg';\r\nimport alien1_jump from '../assets/player/alien1/alien1_jump.svg';\r\nimport alien1_walk1 from '../assets/player/alien1/alien1_walk1.svg';\r\nimport alien1_walk2 from '../assets/player/alien1/alien1_walk2.svg';\r\nimport alien2_stand from '../assets/player/alien2/alien2_stand.svg';\r\nimport alien2_jump from '../assets/player/alien2/alien2_jump.svg';\r\nimport alien2_walk1 from '../assets/player/alien2/alien2_walk1.svg';\r\nimport alien2_walk2 from '../assets/player/alien2/alien2_walk2.svg';\r\n/** Backgrounds */\r\nimport background1 from '../assets/backgrounds/background1.svg';\r\nexport class ImageService {\r\n    constructor() {\r\n        // 3) Load image to files object\r\n        this.static = {\r\n            grassMid: this.load(grassMid),\r\n            grassCenter: this.load(grassCenter),\r\n            bush: this.load(bush),\r\n            fence: this.load(fence),\r\n            fence_broken: this.load(fence_broken),\r\n            herb: this.load(herb),\r\n            rock: this.load(rock),\r\n            mushroomRed: this.load(mushroomRed),\r\n            mushroomBrown: this.load(mushroomBrown),\r\n        };\r\n        this.players = {\r\n            alien1: {\r\n                stand: this.load(alien1_stand),\r\n                jump: this.load(alien1_jump),\r\n                walk: [\r\n                    this.load(alien1_walk1),\r\n                    this.load(alien1_walk2)\r\n                ]\r\n            },\r\n            alien2: {\r\n                stand: this.load(alien2_stand),\r\n                jump: this.load(alien2_jump),\r\n                walk: [\r\n                    this.load(alien2_walk1),\r\n                    this.load(alien2_walk2)\r\n                ]\r\n            }\r\n        };\r\n        this.background = {\r\n            background1: this.load(background1)\r\n        };\r\n        this.filesCount = 0;\r\n        this.loadedFilesCount = 0;\r\n        this.isLoaded = new Promise(res => this.finishLoading = res);\r\n    }\r\n    load(file) {\r\n        ++this.filesCount;\r\n        const img = new Image();\r\n        img.onload = this.fileLoaded.bind(this);\r\n        img.src = file;\r\n        return img;\r\n    }\r\n    fileLoaded() {\r\n        if (++this.loadedFilesCount >= this.filesCount)\r\n            this.finishLoading();\r\n    }\r\n}\r\n","export function swapArrayElements(array, index1, index2) {\r\n    array[index2] = array.splice(index1, 1, array[index2])[0];\r\n}\r\nexport function abs(num) {\r\n    if (num < 0)\r\n        return -num;\r\n    return num;\r\n}\r\n","export class BasicObject {\r\n    constructor(config, canvasService) {\r\n        this.canvasService = canvasService;\r\n        this.relatedCells = [];\r\n        this.isModelFlipped = false;\r\n        this.reverseModel = false;\r\n        this.coords = config.coords;\r\n        this.size = config.size;\r\n    }\r\n    drawObject() {\r\n        const modelCoords = [\r\n            this.coords[0] + this.model.offset[0],\r\n            this.coords[1] + this.model.offset[1],\r\n            ...this.model.size\r\n        ];\r\n        if ((!this.isModelFlipped && !this.reverseModel) || (this.isModelFlipped && this.reverseModel))\r\n            this.canvasService.drawImage(this.model.image, modelCoords);\r\n        else\r\n            this.canvasService.drawFlippedImage(this.model.image, modelCoords);\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Decoration extends BasicObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = false;\r\n        this.setModelParams(config);\r\n        this.model = {\r\n            image: imageService.static[config.model.name],\r\n            offset: config.model.offset,\r\n            size: config.model.size\r\n        };\r\n    }\r\n    setModelParams(config) {\r\n        switch (config.model.name) {\r\n            case 'bush':\r\n                this.updateObjectSize(config, 1.66, 1);\r\n                break;\r\n            case 'herb':\r\n                this.updateObjectSize(config, 0.4, 0.5, true);\r\n                break;\r\n            case 'fence':\r\n                this.updateObjectSize(config, 1.2, 0.75);\r\n                break;\r\n            case 'fence_broken':\r\n                this.updateObjectSize(config, 1.2, 0.75);\r\n                break;\r\n            case 'rock':\r\n                this.updateObjectSize(config, 0.9, 0.53);\r\n                break;\r\n            case 'mushroomRed':\r\n                this.updateObjectSize(config, 0.6, 0.5, true);\r\n                break;\r\n            case 'mushroomBrown':\r\n                this.updateObjectSize(config, 0.6, 0.5, true);\r\n                break;\r\n        }\r\n    }\r\n    updateObjectSize(config, widthRate, heightRate, randomX = false) {\r\n        const xRandom = randomX ? Math.random() * 1.2 + 0.4 : 1;\r\n        this.coords[0] += (this.size[0] - this.size[0] * widthRate) / 2 * xRandom;\r\n        this.coords[1] += (this.size[1] - this.size[1] * heightRate);\r\n        this.size[0] *= widthRate;\r\n        this.size[1] *= heightRate;\r\n        config.model.size = [this.size[0], this.size[1]];\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { BasicObject } from \"./basic-object\";\r\nconst DEFAULT_CONFIG = {\r\n    maxSpeed: 100,\r\n    sideAcceleration: 0.2,\r\n    gravity: 2000,\r\n    maxFallSpeed: 800,\r\n    jumpPower: 800\r\n};\r\nexport class EntityObject extends BasicObject {\r\n    constructor(config, canvasService) {\r\n        super(config, canvasService);\r\n        this.vx = 0; // X-axis speed (in pixels per second)\r\n        this.vy = 0; // Y-axis speed (in pixels per second)\r\n        this.entityConfig = DEFAULT_CONFIG;\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n        this.inAir = false;\r\n        this.textures = {\r\n            time: 0,\r\n            stand: { image: null },\r\n            walk: { images: null, frequent: null },\r\n            jump: { image: null }\r\n        };\r\n    }\r\n    moveRight() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = false;\r\n        if (this.vx < 0)\r\n            this.vx = -this.slowDown(this.vx);\r\n        else\r\n            this.vx = this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    moveLeft() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = true;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    jump() {\r\n        if (!this.inAir) {\r\n            this.jumpButtonPressed = true;\r\n            this.inAir = true;\r\n            this.vy = this.entityConfig.jumpPower;\r\n            this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n        }\r\n    }\r\n    updateState(fps) {\r\n        this.fps = fps;\r\n        if (!this.sideButtonPressed)\r\n            this._stop();\r\n        if (!this.jumpButtonPressed)\r\n            this._fall();\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n    }\r\n    ;\r\n    setEntityConfig(entityConfig) {\r\n        this.entityConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), entityConfig);\r\n    }\r\n    stopFalling() {\r\n        this.inAir = false;\r\n        this.vy = 0;\r\n    }\r\n    startFalling() {\r\n        this.vy = this.applyGravity(0);\r\n    }\r\n    resetSideAcceleration() {\r\n        this.vx = 0;\r\n    }\r\n    /****************** Execute this if no buttons pressed *********************/\r\n    _stop() {\r\n        if (this.vx === 0)\r\n            return;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.slowDown(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    _fall() {\r\n        this.inAir = true;\r\n        this.vy = this.applyGravity(this.vy);\r\n        this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n    }\r\n    /****************** Helpers *********************/\r\n    applyTextures() {\r\n        let img;\r\n        this.textures.time += 1000 / this.fps;\r\n        if (this.textures.time >= 1000)\r\n            this.textures.time = 0;\r\n        if (this.inAir) {\r\n            img = this.textures.jump.image;\r\n        }\r\n        else if (this.vx != 0) {\r\n            this.calculateTextureIndex(this.textures.walk);\r\n            img = this.textures.walk.images[this.textures.walk.index];\r\n        }\r\n        else {\r\n            img = this.textures.stand.image;\r\n        }\r\n        img ? this.model.image = img : null;\r\n    }\r\n    calculateTextureIndex(anim) {\r\n        const frame = Math.floor(this.textures.time / (1000 / anim.frequent));\r\n        anim.index = frame - Math.floor(frame / anim.images.length) * anim.images.length;\r\n    }\r\n    applyGravity(vy) {\r\n        const ySpeed = vy - this.entityConfig.gravity / this.fps;\r\n        if (-ySpeed > this.entityConfig.maxFallSpeed)\r\n            return -this.entityConfig.maxFallSpeed;\r\n        else\r\n            return ySpeed;\r\n    }\r\n    speedUp(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed + this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed > this.entityConfig.maxSpeed)\r\n            return this.entityConfig.maxSpeed;\r\n        else\r\n            return newSpeed;\r\n    }\r\n    slowDown(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed - this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed < 0)\r\n            return 0;\r\n        else\r\n            return newSpeed;\r\n    }\r\n}\r\n","import { EntityObject } from \"../entity-object\";\r\nexport class Player extends EntityObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = true;\r\n        this.pressedDirection = null;\r\n        this.isLeftPressed = false;\r\n        this.isRightPressed = false;\r\n        this.isJumpPressed = false;\r\n        this.heightRate = 1.2;\r\n        this.widthRate = 0.8;\r\n        this.setEntityConfig({\r\n            maxSpeed: 350\r\n        });\r\n        const textures = imageService.players[config.model.name];\r\n        this.textures = {\r\n            time: 0,\r\n            stand: { image: textures.stand },\r\n            walk: { images: textures.walk, frequent: 6 },\r\n            jump: { image: textures.jump }\r\n        };\r\n        this.coords[1] = this.coords[1] - this.size[1] * (this.heightRate - 1);\r\n        this.size = [this.size[0] * this.widthRate, this.size[1] * this.heightRate];\r\n        this.model = {\r\n            image: textures.stand,\r\n            offset: config.model.offset,\r\n            size: [this.size[0], this.size[1]]\r\n        };\r\n        this.initEventListeners();\r\n    }\r\n    updateState(fps) {\r\n        switch (this.pressedDirection) {\r\n            case 'left':\r\n                super.moveLeft();\r\n                break;\r\n            case 'right':\r\n                super.moveRight();\r\n                break;\r\n        }\r\n        if (this.isJumpPressed)\r\n            super.jump();\r\n        super.updateState(fps);\r\n    }\r\n    initEventListeners() {\r\n        document.addEventListener('keydown', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = true;\r\n                    break;\r\n            }\r\n        });\r\n        document.addEventListener('keyup', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = false;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    updateDirection() {\r\n        if (this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = 'left';\r\n        }\r\n        else if (!this.isLeftPressed && this.isRightPressed) {\r\n            this.pressedDirection = 'right';\r\n        }\r\n        else if (!this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = null;\r\n        }\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Wall extends BasicObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = true;\r\n        this.model = {\r\n            image: imageService.static[config.model.name],\r\n            offset: config.model.offset,\r\n            size: config.model.size\r\n        };\r\n    }\r\n}\r\n","import { swapArrayElements } from \"../helpers/common-methods\";\r\nexport class GridService {\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.grid = {};\r\n        this.resetGrid();\r\n    }\r\n    getNeighbors(object) {\r\n        const output = new Set();\r\n        object.relatedCells.forEach(index => {\r\n            this.grid[index].forEach(o => {\r\n                if (o !== object)\r\n                    output.add(o);\r\n            });\r\n        });\r\n        return Array.from(output);\r\n    }\r\n    updateObjectPosition(o) {\r\n        this.removeObjectFromGrid(o);\r\n        this.addObjectToGrid(o);\r\n    }\r\n    // TODO: Check if it faster not remove/add all items, but update only changed items\r\n    removeObjectFromGrid(object) {\r\n        object.relatedCells.forEach(index => {\r\n            for (let [i, obj] of this.grid[index].entries()) {\r\n                if (obj === object) {\r\n                    // Swap our object with the last item in array and then remove last item (performance hack)\r\n                    swapArrayElements(this.grid[index], i, this.grid[index].length - 1);\r\n                    this.grid[index].pop();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        object.relatedCells = [];\r\n    }\r\n    addObjectToGrid(object) {\r\n        const relatedCells = this.getRelatedCells(object.coords, object.size);\r\n        relatedCells.forEach(index => this.grid[index].push(object));\r\n        object.relatedCells = relatedCells;\r\n    }\r\n    resetGrid() {\r\n        const cells = this.getRelatedCells([0, 0], [this.map.width, this.map.height]);\r\n        cells.forEach(index => this.grid[index] = []);\r\n    }\r\n    getRelatedCells(coords, size) {\r\n        const topLeftCorner = this.getCellCoords(coords);\r\n        const bottomRightCorner = this.getCellCoords([coords[0] + size[0], coords[1] + size[1]]);\r\n        const output = [];\r\n        for (let x = topLeftCorner[0]; x <= bottomRightCorner[0]; x++) {\r\n            for (let y = topLeftCorner[1]; y <= bottomRightCorner[1]; y++) {\r\n                output.push(this.getCellIndex([x, y]));\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    getCellCoords(objCoords) {\r\n        const x = Math.floor(objCoords[0] / this.map.cells.size);\r\n        const y = Math.floor(objCoords[1] / this.map.cells.size);\r\n        return [x, y];\r\n    }\r\n    getCellIndex(cellCoords) {\r\n        return cellCoords[0] + 'x' + cellCoords[1];\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { Decoration } from \"../objects/types/decoration.object\";\r\nimport { Player } from \"../objects/types/player.object\";\r\nimport { Wall } from \"../objects/types/wall.object\";\r\nimport { GridService } from \"./grid.service\";\r\nexport class ObjectService {\r\n    constructor(imageService, canvasService, config) {\r\n        this.imageService = imageService;\r\n        this.canvasService = canvasService;\r\n        this.background_objects = [];\r\n        this.static_objects = [];\r\n        this.map = {\r\n            width: config.map.width,\r\n            height: config.map.height,\r\n        };\r\n        this.gridService = new GridService(config.map);\r\n        this.init(config);\r\n    }\r\n    init(config) {\r\n        this.clearObjects();\r\n        this.player = new Player(config.player, this.canvasService, this.imageService);\r\n        for (let obj of config.objects) {\r\n            switch (obj.type) {\r\n                case 'wall':\r\n                    this.static_objects.push(new Wall(obj, this.canvasService, this.imageService));\r\n                    break;\r\n                case 'decoration':\r\n                    this.background_objects.push(new Decoration(obj, this.canvasService, this.imageService));\r\n                    break;\r\n            }\r\n        }\r\n        this.static_objects.forEach(o => this.gridService.addObjectToGrid(o));\r\n    }\r\n    renderObjects(fps) {\r\n        /* Background objects render */\r\n        this.background_objects.forEach(o => o.drawObject());\r\n        /* Static objects render */\r\n        this.static_objects.forEach(o => o.drawObject());\r\n        /* Player render */\r\n        this.renderDynamicObject(this.player, fps);\r\n        this.canvasService.updateCameraTranslation(...this.player.coords, ...this.player.size);\r\n    }\r\n    renderDynamicObject(object, fps) {\r\n        object.updateState(fps);\r\n        this.checkBounds(object);\r\n        this.gridService.updateObjectPosition(object);\r\n        this.checkAllCollisions(object, this.gridService.getNeighbors(object));\r\n        object.applyTextures();\r\n        // Round coords after all calculations to prevent visual collision\r\n        object.coords[0] = Math.round(object.coords[0]);\r\n        object.coords[1] = Math.round(object.coords[1]);\r\n        object.drawObject();\r\n    }\r\n    clearObjects() {\r\n        this.background_objects = [];\r\n        this.static_objects = [];\r\n    }\r\n    get allObjects() {\r\n        return [...this.static_objects];\r\n    }\r\n    checkBounds(obj) {\r\n        let [x, y] = obj.coords;\r\n        if (x < 0) {\r\n            x = 0;\r\n            obj.resetSideAcceleration();\r\n        }\r\n        else if (x + obj.size[0] > this.map.width) {\r\n            x = this.map.width - obj.size[0];\r\n            obj.resetSideAcceleration();\r\n        }\r\n        if (y < 0) {\r\n            y = 0;\r\n            obj.startFalling();\r\n        }\r\n        else if (y + obj.size[1] > this.map.height) {\r\n            y = this.map.height - obj.size[1];\r\n            obj.stopFalling();\r\n        }\r\n        obj.coords = [x, y];\r\n    }\r\n    checkAllCollisions(obj, objectsAround) {\r\n        let hasOverlaps = false;\r\n        objectsAround.forEach(o => this.checkCollision(obj, o) ? hasOverlaps = true : null);\r\n        if (hasOverlaps)\r\n            this.gridService.updateObjectPosition(obj);\r\n    }\r\n    checkCollision(o1, o2) {\r\n        // if o1 overlaps with o2, then o1 will be moved out from o2\r\n        // P.S. This function is hell for debugging :)\r\n        if (o2.hasCollision === false)\r\n            return;\r\n        let [o1_x1, o1_y1] = o1.coords;\r\n        const [o1_x2, o1_y2] = [o1.coords[0] + o1.size[0], o1.coords[1] + o1.size[1]];\r\n        const [o2_x1, o2_y1] = o2.coords;\r\n        const [o2_x2, o2_y2] = [o2.coords[0] + o2.size[0], o2.coords[1] + o2.size[1]];\r\n        // Check horizontal overlaps\r\n        let horizontalOverlap = false;\r\n        const h1 = o1_x2 - o2_x1;\r\n        const h2 = o1_x1 - o2_x2;\r\n        if ((h1 < 0 && h2 > 0) || (h1 > 0 && h2 < 0))\r\n            horizontalOverlap = true;\r\n        // Check vertical overlaps\r\n        let verticalOverlap = false;\r\n        const v1 = o1_y2 - o2_y1;\r\n        const v2 = o1_y1 - o2_y2;\r\n        if ((v1 < 0 && v2 > 0) || (v1 > 0 && v2 < 0))\r\n            verticalOverlap = true;\r\n        // If overlaps in all axes\r\n        if (verticalOverlap && horizontalOverlap) {\r\n            const hOffset = abs(h1) < abs(h2) ? h1 : h2;\r\n            const vOffset = abs(v1) < abs(v2) ? v1 : v2;\r\n            if (abs(hOffset) < abs(vOffset)) {\r\n                o1_x1 -= hOffset;\r\n                o1.resetSideAcceleration();\r\n            }\r\n            else {\r\n                o1_y1 -= vOffset;\r\n                if (vOffset > 0) {\r\n                    o1.stopFalling();\r\n                }\r\n                else {\r\n                    o1.startFalling();\r\n                }\r\n            }\r\n            o1.coords = [o1_x1, o1_y1];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class GameLoopService {\r\n    constructor(canvasService, objectService) {\r\n        this.canvasService = canvasService;\r\n        this.objectService = objectService;\r\n        this.isGamePaused = false;\r\n    }\r\n    start() {\r\n        this.isGamePaused = false;\r\n        this.frameStart = performance.now();\r\n        this.step();\r\n    }\r\n    stop() {\r\n        this.isGamePaused = true;\r\n    }\r\n    // Methods that should be executed during single game frame\r\n    frame() {\r\n        this.canvasService.clearCanvas();\r\n        this.objectService.renderObjects(this.fps);\r\n        this.canvasService.drawFPS(this.fps);\r\n    }\r\n    step() {\r\n        const frameEnd = performance.now();\r\n        this.fps = Math.floor(1000 / (frameEnd - this.frameStart));\r\n        this.frameStart = performance.now();\r\n        if (this.fps < 25)\r\n            this.fps = 25;\r\n        if (this.fps > 1000)\r\n            this.fps = 1000;\r\n        this.frame();\r\n        if (!this.isGamePaused)\r\n            setTimeout(() => this.step(), 0);\r\n    }\r\n}\r\n","export class ConfigService {\r\n    constructor(config) {\r\n        this.config = this.applyDefaultConfig(config);\r\n        this.parsedConfig = this.parseConfig(this.config);\r\n    }\r\n    getParsedConfig() {\r\n        return this.parsedConfig;\r\n    }\r\n    parseConfig(config) {\r\n        const parsedConfig = {\r\n            canvas: Object.assign({}, config.canvas),\r\n            map: {\r\n                width: config.map.width * config.map.cellSize,\r\n                height: config.map.height * config.map.cellSize,\r\n                cells: {\r\n                    size: config.map.cellSize,\r\n                    horizontal: config.map.width,\r\n                    vertical: config.map.height\r\n                }\r\n            },\r\n            camera: this.getParsedCameraConfig(config),\r\n            player: this.getParsedObjectConfig(config.player, config),\r\n            objects: config.objects.map(obj => this.getParsedObjectConfig(obj, config))\r\n        };\r\n        return parsedConfig;\r\n    }\r\n    getParsedObjectConfig(obj, config) {\r\n        const parsedConfig = {\r\n            type: obj.type,\r\n            coords: [obj.coords[0] * config.map.cellSize, obj.coords[1] * config.map.cellSize],\r\n            size: [config.map.cellSize, config.map.cellSize],\r\n            model: {\r\n                name: obj.model,\r\n                offset: [0, 0],\r\n                size: [config.map.cellSize, config.map.cellSize]\r\n            }\r\n        };\r\n        return parsedConfig;\r\n    }\r\n    getParsedCameraConfig(config) {\r\n        const breakpoints = {\r\n            top: getPoint(config.canvas.height, config.camera.top),\r\n            right: getPoint(config.canvas.width, config.camera.right),\r\n            bottom: getPoint(config.canvas.height, config.camera.bottom),\r\n            left: getPoint(config.canvas.width, config.camera.left)\r\n        };\r\n        return breakpoints;\r\n        function getPoint(x, y) {\r\n            const [a, b] = y.split(':');\r\n            return x / parseInt(b) * parseInt(a);\r\n        }\r\n    }\r\n    /************** DEFAULT CONFIG **************/\r\n    applyDefaultConfig(config) {\r\n        const def = this.getDefaultConfig();\r\n        return {\r\n            canvas: Object.assign(Object.assign({}, def.canvas), config.canvas),\r\n            map: Object.assign(Object.assign({}, def.map), config.map),\r\n            camera: Object.assign(Object.assign({}, def.camera), config.camera),\r\n            player: Object.assign({}, config.player),\r\n            objects: [...def.objects, ...config.objects]\r\n        };\r\n    }\r\n    getDefaultConfig() {\r\n        return {\r\n            canvas: {\r\n                width: 900,\r\n                height: 600\r\n            },\r\n            map: {\r\n                width: 20,\r\n                height: 10,\r\n                cellSize: 70,\r\n            },\r\n            camera: {\r\n                top: '1:4',\r\n                right: '1:2',\r\n                bottom: '1:4',\r\n                left: '1:4',\r\n            },\r\n            player: null,\r\n            objects: []\r\n        };\r\n    }\r\n}\r\n","import CanvasService from \"./services/canvas.service\";\r\nimport { ImageService } from \"./services/image.service\";\r\nimport { ObjectService } from \"./services/object.service\";\r\nimport { GameLoopService } from \"./services/game-loop.service\";\r\nimport { ConfigService } from \"./services/config.service\";\r\nexport default class Platformer2D {\r\n    constructor(canvas, config) {\r\n        this.imageService = new ImageService();\r\n        this.configService = new ConfigService(config);\r\n        this.config = this.configService.getParsedConfig();\r\n        this.canvasService = new CanvasService(canvas, this.config, this.imageService);\r\n        this.objectService = new ObjectService(this.imageService, this.canvasService, this.config);\r\n        this.gameLoopService = new GameLoopService(this.canvasService, this.objectService);\r\n        this.imageService.isLoaded.then(() => this.init());\r\n    }\r\n    init() {\r\n        this.gameLoopService.start();\r\n    }\r\n}\r\n;\r\n"],"sourceRoot":""}