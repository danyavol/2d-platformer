{"version":3,"sources":["webpack://platformer-2d/webpack/universalModuleDefinition","webpack://platformer-2d/webpack/bootstrap","webpack://platformer-2d/webpack/runtime/define property getters","webpack://platformer-2d/webpack/runtime/hasOwnProperty shorthand","webpack://platformer-2d/webpack/runtime/make namespace object","webpack://platformer-2d/./lib/services/canvas.service.ts","webpack://platformer-2d/./lib/services/image.service.ts","webpack://platformer-2d/./lib/helpers/common-methods.ts","webpack://platformer-2d/./lib/objects/basic-object.ts","webpack://platformer-2d/./lib/objects/entity-object.ts","webpack://platformer-2d/./lib/objects/player/player.object.ts","webpack://platformer-2d/./lib/objects/wall/wall.object.ts","webpack://platformer-2d/./lib/services/grid.service.ts","webpack://platformer-2d/./lib/services/object.service.ts","webpack://platformer-2d/./lib/services/game-loop.service.ts","webpack://platformer-2d/./lib/services/config.service.ts","webpack://platformer-2d/./lib/index.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","CanvasService","constructor","canvasElement","config","imageService","this","translation","h","v","backgroundImage","background","background1","element","canvas","assign","ctx","getContext","map","width","height","breakpoints","camera","updateCameraTranslation","x","y","w","transX","transY","left","right","translate","top","bottom","clearCanvas","drawImage","img","coords","drawFlippedImage","scale","setTransform","drawFPS","fps","font","fillText","ImageService","static","grassMid","load","grassCenter","players","alien1","stand","alien1_stand","jump","alien1_jump","walk","alien1_walk1","alien1_walk2","alien2","alien2_stand","alien2_jump","alien2_walk1","alien2_walk2","filesCount","loadedFilesCount","isLoaded","Promise","res","finishLoading","file","Image","onload","fileLoaded","bind","src","abs","num","BasicObject","canvasService","relatedCells","isModelFlipped","reverseModel","size","drawObject","modelCoords","model","offset","image","DEFAULT_CONFIG","maxSpeed","sideAcceleration","gravity","maxFallSpeed","jumpPower","EntityObject","super","vx","vy","entityConfig","sideButtonPressed","jumpButtonPressed","inAir","textures","time","images","frequent","moveRight","slowDown","speedUp","moveLeft","updateState","_stop","_fall","setEntityConfig","stopFalling","startFalling","applyGravity","resetSideAcceleration","applyTextures","calculateTextureIndex","index","anim","frame","Math","floor","length","ySpeed","currSpeed","newSpeed","Player","hasCollision","pressedDirection","isLeftPressed","isRightPressed","isJumpPressed","name","initEventListeners","document","addEventListener","e","updateDirection","Wall","GridService","grid","resetGrid","getNeighbors","object","output","Set","forEach","add","Array","from","updateObjectPosition","removeObjectFromGrid","addObjectToGrid","i","entries","index1","array","index2","splice","pop","getRelatedCells","push","topLeftCorner","getCellCoords","bottomRightCorner","getCellIndex","objCoords","cells","cellCoords","ObjectService","staticObjects","dynamicObjects","gridService","init","clearObjects","player","objects","type","renderObjects","renderDynamicObject","checkBounds","checkAllCollisions","round","objectsAround","hasOverlaps","checkCollision","o1","o2","o1_x1","o1_y1","o1_x2","o1_y2","o2_x1","o2_y1","o2_x2","o2_y2","horizontalOverlap","h1","h2","verticalOverlap","v1","v2","hOffset","vOffset","GameLoopService","objectService","isGamePaused","start","frameStart","performance","now","step","stop","frameEnd","setTimeout","ConfigService","applyDefaultConfig","parsedConfig","parseConfig","getParsedConfig","cellSize","horizontal","vertical","getParsedCameraConfig","getParsedObjectConfig","getPoint","a","b","split","parseInt","def","getDefaultConfig","Platformer2D","configService","gameLoopService","then"],"mappings":"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","file":"dist/platformer-2d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Platformer2D\"] = factory();\n\telse\n\t\troot[\"Platformer2D\"] = factory();\n})(self, function() {\nreturn ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class CanvasService {\r\n    constructor(canvasElement, config, imageService) {\r\n        this.translation = {\r\n            h: 0,\r\n            v: 0\r\n        };\r\n        this.backgroundImage = imageService.background.background1;\r\n        this.element = canvasElement;\r\n        this.canvas = Object.assign(Object.assign({}, config.canvas), { ctx: canvasElement.getContext('2d') });\r\n        this.map = {\r\n            width: config.map.width,\r\n            height: config.map.height\r\n        };\r\n        this.element.width = this.canvas.width;\r\n        this.element.height = this.canvas.height;\r\n        this.breakpoints = config.camera;\r\n    }\r\n    updateCameraTranslation(x, y, w, h) {\r\n        // P.S. Don't try to understand this method :# This is hell\r\n        // Horizontal translation\r\n        let transX;\r\n        if (this.translation.h + this.breakpoints.left > x) {\r\n            transX = this.translation.h - (this.breakpoints.left + this.translation.h - x);\r\n        }\r\n        else if (this.translation.h + this.canvas.width - this.breakpoints.right < x + w) {\r\n            transX = this.translation.h + (x + w - (this.translation.h + this.canvas.width - this.breakpoints.right));\r\n        }\r\n        if (transX != null && transX != this.translation.h && transX >= 0 && transX <= this.map.width - this.canvas.width) {\r\n            this.canvas.ctx.translate(this.translation.h - transX, 0);\r\n            this.translation.h = transX;\r\n        }\r\n        if (transX != null && transX != this.translation.h) {\r\n            if (transX < 0) {\r\n                this.canvas.ctx.translate(0, this.translation.h);\r\n                this.translation.h = 0;\r\n            }\r\n            else if (transX > this.map.width - this.canvas.width) {\r\n                this.canvas.ctx.translate(0, this.canvas.width - this.map.width + this.translation.h);\r\n                this.translation.h = this.map.width - this.canvas.width;\r\n            }\r\n            else {\r\n                this.canvas.ctx.translate(0, this.translation.h - transX);\r\n                this.translation.h = transX;\r\n            }\r\n        }\r\n        // Vertical translation\r\n        let transY;\r\n        if (this.translation.v + this.breakpoints.top > y) {\r\n            transY = this.translation.v - (this.breakpoints.top + this.translation.v - y);\r\n        }\r\n        else if (this.translation.v + this.canvas.height - this.breakpoints.bottom < y + h) {\r\n            transY = this.translation.v + (y + h - (this.translation.v + this.canvas.height - this.breakpoints.bottom));\r\n        }\r\n        if (transY != null && transY != this.translation.v) {\r\n            if (transY < 0) {\r\n                this.canvas.ctx.translate(0, this.translation.v);\r\n                this.translation.v = 0;\r\n            }\r\n            else if (transY > this.map.height - this.canvas.height) {\r\n                this.canvas.ctx.translate(0, this.canvas.height - this.map.height + this.translation.v);\r\n                this.translation.v = this.map.height - this.canvas.height;\r\n            }\r\n            else {\r\n                this.canvas.ctx.translate(0, this.translation.v - transY);\r\n                this.translation.v = transY;\r\n            }\r\n        }\r\n    }\r\n    clearCanvas() {\r\n        this.canvas.ctx.drawImage(this.backgroundImage, 0 + this.translation.h, 0 + this.translation.v, this.canvas.width, this.canvas.height);\r\n    }\r\n    drawImage(img, coords) {\r\n        this.canvas.ctx.drawImage(img, ...coords);\r\n    }\r\n    drawFlippedImage(img, coords) {\r\n        this.canvas.ctx.translate(coords[0] + coords[2], coords[1]);\r\n        this.canvas.ctx.scale(-1, 1);\r\n        this.canvas.ctx.drawImage(img, 0, 0, coords[2], coords[3]);\r\n        this.canvas.ctx.setTransform(1, 0, 0, 1, -this.translation.h, -this.translation.v);\r\n    }\r\n    drawFPS(fps) {\r\n        this.canvas.ctx.font = '14px sans-serif';\r\n        this.canvas.ctx.fillText('FPS: ' + fps, 0 + this.translation.h, 14 + this.translation.v);\r\n    }\r\n}\r\n","// 1) Import image\r\nimport grassMid from '../assets/grass/grassMid.svg';\r\nimport grassCenter from '../assets/grass/grassCenter.svg';\r\nimport alien1_stand from '../assets/player/alien1/alien1_stand.svg';\r\nimport alien1_jump from '../assets/player/alien1/alien1_jump.svg';\r\nimport alien1_walk1 from '../assets/player/alien1/alien1_walk1.svg';\r\nimport alien1_walk2 from '../assets/player/alien1/alien1_walk2.svg';\r\nimport alien2_stand from '../assets/player/alien2/alien2_stand.svg';\r\nimport alien2_jump from '../assets/player/alien2/alien2_jump.svg';\r\nimport alien2_walk1 from '../assets/player/alien2/alien2_walk1.svg';\r\nimport alien2_walk2 from '../assets/player/alien2/alien2_walk2.svg';\r\nimport background1 from '../assets/backgrounds/background1.svg';\r\nexport class ImageService {\r\n    constructor() {\r\n        // 3) Load image to files object\r\n        this.static = {\r\n            grassMid: this.load(grassMid),\r\n            grassCenter: this.load(grassCenter)\r\n        };\r\n        this.players = {\r\n            alien1: {\r\n                stand: this.load(alien1_stand),\r\n                jump: this.load(alien1_jump),\r\n                walk: [\r\n                    this.load(alien1_walk1),\r\n                    this.load(alien1_walk2)\r\n                ]\r\n            },\r\n            alien2: {\r\n                stand: this.load(alien2_stand),\r\n                jump: this.load(alien2_jump),\r\n                walk: [\r\n                    this.load(alien2_walk1),\r\n                    this.load(alien2_walk2)\r\n                ]\r\n            }\r\n        };\r\n        this.background = {\r\n            background1: this.load(background1)\r\n        };\r\n        this.filesCount = 0;\r\n        this.loadedFilesCount = 0;\r\n        this.isLoaded = new Promise(res => this.finishLoading = res);\r\n    }\r\n    load(file) {\r\n        ++this.filesCount;\r\n        const img = new Image();\r\n        img.onload = this.fileLoaded.bind(this);\r\n        img.src = file;\r\n        return img;\r\n    }\r\n    fileLoaded() {\r\n        if (++this.loadedFilesCount >= this.filesCount)\r\n            this.finishLoading();\r\n    }\r\n}\r\n","export function swapArrayElements(array, index1, index2) {\r\n    array[index2] = array.splice(index1, 1, array[index2])[0];\r\n}\r\nexport function abs(num) {\r\n    if (num < 0)\r\n        return -num;\r\n    return num;\r\n}\r\n","export class BasicObject {\r\n    constructor(config, canvasService) {\r\n        this.canvasService = canvasService;\r\n        this.relatedCells = [];\r\n        this.isModelFlipped = false;\r\n        this.reverseModel = false;\r\n        this.coords = config.coords;\r\n        this.size = config.size;\r\n    }\r\n    drawObject() {\r\n        const modelCoords = [\r\n            this.coords[0] + this.model.offset[0],\r\n            this.coords[1] + this.model.offset[1],\r\n            ...this.model.size\r\n        ];\r\n        if ((!this.isModelFlipped && !this.reverseModel) || (this.isModelFlipped && this.reverseModel))\r\n            this.canvasService.drawImage(this.model.image, modelCoords);\r\n        else\r\n            this.canvasService.drawFlippedImage(this.model.image, modelCoords);\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { BasicObject } from \"./basic-object\";\r\nconst DEFAULT_CONFIG = {\r\n    maxSpeed: 100,\r\n    sideAcceleration: 0.2,\r\n    gravity: 2000,\r\n    maxFallSpeed: 800,\r\n    jumpPower: 800\r\n};\r\nexport class EntityObject extends BasicObject {\r\n    constructor(config, canvasService) {\r\n        super(config, canvasService);\r\n        this.vx = 0; // X-axis speed (in pixels per second)\r\n        this.vy = 0; // Y-axis speed (in pixels per second)\r\n        this.entityConfig = DEFAULT_CONFIG;\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n        this.inAir = false;\r\n        this.textures = {\r\n            time: 0,\r\n            stand: { image: null },\r\n            walk: { images: null, frequent: null },\r\n            jump: { image: null }\r\n        };\r\n    }\r\n    moveRight() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = false;\r\n        if (this.vx < 0)\r\n            this.vx = -this.slowDown(this.vx);\r\n        else\r\n            this.vx = this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    moveLeft() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = true;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    jump() {\r\n        if (!this.inAir) {\r\n            this.jumpButtonPressed = true;\r\n            this.inAir = true;\r\n            this.vy = this.entityConfig.jumpPower;\r\n            this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n        }\r\n    }\r\n    updateState(fps) {\r\n        this.fps = fps;\r\n        if (!this.sideButtonPressed)\r\n            this._stop();\r\n        if (!this.jumpButtonPressed)\r\n            this._fall();\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n    }\r\n    ;\r\n    setEntityConfig(entityConfig) {\r\n        this.entityConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), entityConfig);\r\n    }\r\n    stopFalling() {\r\n        this.inAir = false;\r\n        this.vy = 0;\r\n    }\r\n    startFalling() {\r\n        this.vy = this.applyGravity(0);\r\n    }\r\n    resetSideAcceleration() {\r\n        this.vx = 0;\r\n    }\r\n    /****************** Execute this if no buttons pressed *********************/\r\n    _stop() {\r\n        if (this.vx === 0)\r\n            return;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.slowDown(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    _fall() {\r\n        this.inAir = true;\r\n        this.vy = this.applyGravity(this.vy);\r\n        this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n    }\r\n    /****************** Helpers *********************/\r\n    applyTextures() {\r\n        let img;\r\n        this.textures.time += 1000 / this.fps;\r\n        if (this.textures.time >= 1000)\r\n            this.textures.time = 0;\r\n        if (this.inAir) {\r\n            img = this.textures.jump.image;\r\n        }\r\n        else if (this.vx != 0) {\r\n            this.calculateTextureIndex(this.textures.walk);\r\n            img = this.textures.walk.images[this.textures.walk.index];\r\n        }\r\n        else {\r\n            img = this.textures.stand.image;\r\n        }\r\n        img ? this.model.image = img : null;\r\n    }\r\n    calculateTextureIndex(anim) {\r\n        const frame = Math.floor(this.textures.time / (1000 / anim.frequent));\r\n        anim.index = frame - Math.floor(frame / anim.images.length) * anim.images.length;\r\n    }\r\n    applyGravity(vy) {\r\n        const ySpeed = vy - this.entityConfig.gravity / this.fps;\r\n        if (-ySpeed > this.entityConfig.maxFallSpeed)\r\n            return -this.entityConfig.maxFallSpeed;\r\n        else\r\n            return ySpeed;\r\n    }\r\n    speedUp(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed + this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed > this.entityConfig.maxSpeed)\r\n            return this.entityConfig.maxSpeed;\r\n        else\r\n            return newSpeed;\r\n    }\r\n    slowDown(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed - this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed < 0)\r\n            return 0;\r\n        else\r\n            return newSpeed;\r\n    }\r\n}\r\n","import { EntityObject } from \"../entity-object\";\r\nexport class Player extends EntityObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = true;\r\n        this.pressedDirection = null;\r\n        this.isLeftPressed = false;\r\n        this.isRightPressed = false;\r\n        this.isJumpPressed = false;\r\n        this.setEntityConfig({\r\n            maxSpeed: 350\r\n        });\r\n        const textures = imageService.players[config.model.name];\r\n        this.textures = {\r\n            time: 0,\r\n            stand: { image: textures.stand },\r\n            walk: { images: textures.walk, frequent: 6 },\r\n            jump: { image: textures.jump }\r\n        };\r\n        config.coords[1] = config.coords[1] - config.size[1] * 0.4;\r\n        config.size[1] = config.size[1] * 1.4;\r\n        this.model = {\r\n            image: textures.stand,\r\n            offset: config.model.offset,\r\n            size: [config.model.size[0], config.model.size[1] * 1.4]\r\n        };\r\n        this.initEventListeners();\r\n    }\r\n    updateState(fps) {\r\n        switch (this.pressedDirection) {\r\n            case 'left':\r\n                super.moveLeft();\r\n                break;\r\n            case 'right':\r\n                super.moveRight();\r\n                break;\r\n        }\r\n        if (this.isJumpPressed)\r\n            super.jump();\r\n        super.updateState(fps);\r\n    }\r\n    initEventListeners() {\r\n        document.addEventListener('keydown', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = true;\r\n                    break;\r\n            }\r\n        });\r\n        document.addEventListener('keyup', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = false;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    updateDirection() {\r\n        if (this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = 'left';\r\n        }\r\n        else if (!this.isLeftPressed && this.isRightPressed) {\r\n            this.pressedDirection = 'right';\r\n        }\r\n        else if (!this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = null;\r\n        }\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Wall extends BasicObject {\r\n    constructor(config, canvasService, imageService) {\r\n        super(config, canvasService);\r\n        this.hasCollision = true;\r\n        this.model = {\r\n            image: imageService.static[config.model.name],\r\n            offset: config.model.offset,\r\n            size: config.model.size\r\n        };\r\n    }\r\n}\r\n","import { swapArrayElements } from \"../helpers/common-methods\";\r\nexport class GridService {\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.grid = {};\r\n        this.resetGrid();\r\n    }\r\n    getNeighbors(object) {\r\n        const output = new Set();\r\n        object.relatedCells.forEach(index => {\r\n            this.grid[index].forEach(o => {\r\n                if (o !== object)\r\n                    output.add(o);\r\n            });\r\n        });\r\n        return Array.from(output);\r\n    }\r\n    updateObjectPosition(o) {\r\n        this.removeObjectFromGrid(o);\r\n        this.addObjectToGrid(o);\r\n    }\r\n    // TODO: Check if it faster not remove/add all items, but update only changed items\r\n    removeObjectFromGrid(object) {\r\n        object.relatedCells.forEach(index => {\r\n            for (let [i, obj] of this.grid[index].entries()) {\r\n                if (obj === object) {\r\n                    // Swap our object with the last item in array and then remove last item (performance hack)\r\n                    swapArrayElements(this.grid[index], i, this.grid[index].length - 1);\r\n                    this.grid[index].pop();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        object.relatedCells = [];\r\n    }\r\n    addObjectToGrid(object) {\r\n        const relatedCells = this.getRelatedCells(object.coords, object.size);\r\n        relatedCells.forEach(index => this.grid[index].push(object));\r\n        object.relatedCells = relatedCells;\r\n    }\r\n    resetGrid() {\r\n        const cells = this.getRelatedCells([0, 0], [this.map.width, this.map.height]);\r\n        cells.forEach(index => this.grid[index] = []);\r\n    }\r\n    getRelatedCells(coords, size) {\r\n        const topLeftCorner = this.getCellCoords(coords);\r\n        const bottomRightCorner = this.getCellCoords([coords[0] + size[0], coords[1] + size[1]]);\r\n        const output = [];\r\n        for (let x = topLeftCorner[0]; x <= bottomRightCorner[0]; x++) {\r\n            for (let y = topLeftCorner[1]; y <= bottomRightCorner[1]; y++) {\r\n                output.push(this.getCellIndex([x, y]));\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    getCellCoords(objCoords) {\r\n        const x = Math.floor(objCoords[0] / this.map.cells.size);\r\n        const y = Math.floor(objCoords[1] / this.map.cells.size);\r\n        return [x, y];\r\n    }\r\n    getCellIndex(cellCoords) {\r\n        return cellCoords[0] + 'x' + cellCoords[1];\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { Player } from \"../objects/player/player.object\";\r\nimport { Wall } from \"../objects/wall/wall.object\";\r\nimport { GridService } from \"./grid.service\";\r\nexport class ObjectService {\r\n    constructor(imageService, canvasService, config) {\r\n        this.imageService = imageService;\r\n        this.canvasService = canvasService;\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n        this.map = {\r\n            width: config.map.width,\r\n            height: config.map.height,\r\n        };\r\n        this.gridService = new GridService(config.map);\r\n        this.init(config);\r\n    }\r\n    init(config) {\r\n        this.clearObjects();\r\n        this.player = new Player(config.player, this.canvasService, this.imageService);\r\n        for (let obj of config.objects) {\r\n            switch (obj.type) {\r\n                case 'wall':\r\n                    this.staticObjects.push(new Wall(obj, this.canvasService, this.imageService));\r\n                    break;\r\n            }\r\n        }\r\n        this.staticObjects.forEach(o => this.gridService.addObjectToGrid(o));\r\n    }\r\n    renderObjects(fps) {\r\n        /* Static objects render */\r\n        this.staticObjects.forEach(o => o.drawObject());\r\n        /* Player render */\r\n        this.renderDynamicObject(this.player, fps);\r\n        this.canvasService.updateCameraTranslation(...this.player.coords, ...this.player.size);\r\n        /* Dynamic objects render */\r\n        this.dynamicObjects.forEach(o => {\r\n            this.renderDynamicObject(o, fps);\r\n        });\r\n    }\r\n    renderDynamicObject(object, fps) {\r\n        object.updateState(fps);\r\n        this.checkBounds(object);\r\n        this.gridService.updateObjectPosition(object);\r\n        this.checkAllCollisions(object, this.gridService.getNeighbors(object));\r\n        object.applyTextures();\r\n        // Round coords after all calculations to prevent visual collision\r\n        object.coords[0] = Math.round(object.coords[0]);\r\n        object.coords[1] = Math.round(object.coords[1]);\r\n        object.drawObject();\r\n    }\r\n    clearObjects() {\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n    }\r\n    get allObjects() {\r\n        return [...this.staticObjects, ...this.dynamicObjects];\r\n    }\r\n    checkBounds(obj) {\r\n        let [x, y] = obj.coords;\r\n        if (x < 0) {\r\n            x = 0;\r\n            obj.resetSideAcceleration();\r\n        }\r\n        else if (x + obj.size[0] > this.map.width) {\r\n            x = this.map.width - obj.size[0];\r\n            obj.resetSideAcceleration();\r\n        }\r\n        if (y < 0) {\r\n            y = 0;\r\n            obj.startFalling();\r\n        }\r\n        else if (y + obj.size[1] > this.map.height) {\r\n            y = this.map.height - obj.size[1];\r\n            obj.stopFalling();\r\n        }\r\n        obj.coords = [x, y];\r\n    }\r\n    checkAllCollisions(obj, objectsAround) {\r\n        let hasOverlaps = false;\r\n        objectsAround.forEach(o => this.checkCollision(obj, o) ? hasOverlaps = true : null);\r\n        if (hasOverlaps)\r\n            this.gridService.updateObjectPosition(obj);\r\n    }\r\n    checkCollision(o1, o2) {\r\n        // if o1 overlaps with o2, then o1 will be moved out from o2\r\n        // P.S. This function is hell for debugging :)\r\n        let [o1_x1, o1_y1] = o1.coords;\r\n        const [o1_x2, o1_y2] = [o1.coords[0] + o1.size[0], o1.coords[1] + o1.size[1]];\r\n        const [o2_x1, o2_y1] = o2.coords;\r\n        const [o2_x2, o2_y2] = [o2.coords[0] + o2.size[0], o2.coords[1] + o2.size[1]];\r\n        // Check horizontal overlaps\r\n        let horizontalOverlap = false;\r\n        const h1 = o1_x2 - o2_x1;\r\n        const h2 = o1_x1 - o2_x2;\r\n        if ((h1 < 0 && h2 > 0) || (h1 > 0 && h2 < 0))\r\n            horizontalOverlap = true;\r\n        // Check vertical overlaps\r\n        let verticalOverlap = false;\r\n        const v1 = o1_y2 - o2_y1;\r\n        const v2 = o1_y1 - o2_y2;\r\n        if ((v1 < 0 && v2 > 0) || (v1 > 0 && v2 < 0))\r\n            verticalOverlap = true;\r\n        // If overlaps in all axes\r\n        if (verticalOverlap && horizontalOverlap) {\r\n            const hOffset = abs(h1) < abs(h2) ? h1 : h2;\r\n            const vOffset = abs(v1) < abs(v2) ? v1 : v2;\r\n            if (abs(hOffset) < abs(vOffset)) {\r\n                o1_x1 -= hOffset;\r\n                o1.resetSideAcceleration();\r\n            }\r\n            else {\r\n                o1_y1 -= vOffset;\r\n                if (vOffset > 0) {\r\n                    o1.stopFalling();\r\n                }\r\n                else {\r\n                    o1.startFalling();\r\n                }\r\n            }\r\n            o1.coords = [o1_x1, o1_y1];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class GameLoopService {\r\n    constructor(canvasService, objectService) {\r\n        this.canvasService = canvasService;\r\n        this.objectService = objectService;\r\n        this.isGamePaused = false;\r\n    }\r\n    start() {\r\n        this.isGamePaused = false;\r\n        this.frameStart = performance.now();\r\n        this.step();\r\n    }\r\n    stop() {\r\n        this.isGamePaused = true;\r\n    }\r\n    // Methods that should be executed during single game frame\r\n    frame() {\r\n        this.canvasService.clearCanvas();\r\n        this.objectService.renderObjects(this.fps);\r\n        this.canvasService.drawFPS(this.fps);\r\n    }\r\n    step() {\r\n        const frameEnd = performance.now();\r\n        this.fps = Math.floor(1000 / (frameEnd - this.frameStart));\r\n        this.frameStart = performance.now();\r\n        if (this.fps < 25)\r\n            this.fps = 25;\r\n        if (this.fps > 1000)\r\n            this.fps = 1000;\r\n        this.frame();\r\n        if (!this.isGamePaused)\r\n            setTimeout(() => this.step(), 0);\r\n    }\r\n}\r\n","export class ConfigService {\r\n    constructor(config) {\r\n        this.config = this.applyDefaultConfig(config);\r\n        this.parsedConfig = this.parseConfig(this.config);\r\n    }\r\n    getParsedConfig() {\r\n        return this.parsedConfig;\r\n    }\r\n    parseConfig(config) {\r\n        const parsedConfig = {\r\n            canvas: Object.assign({}, config.canvas),\r\n            map: {\r\n                width: config.map.width * config.map.cellSize,\r\n                height: config.map.height * config.map.cellSize,\r\n                cells: {\r\n                    size: config.map.cellSize,\r\n                    horizontal: config.map.width,\r\n                    vertical: config.map.height\r\n                }\r\n            },\r\n            camera: this.getParsedCameraConfig(config),\r\n            player: this.getParsedObjectConfig(config.player, config),\r\n            objects: config.objects.map(obj => this.getParsedObjectConfig(obj, config))\r\n        };\r\n        return parsedConfig;\r\n    }\r\n    getParsedObjectConfig(obj, config) {\r\n        const parsedConfig = {\r\n            type: obj.type,\r\n            coords: [obj.coords[0] * config.map.cellSize, obj.coords[1] * config.map.cellSize],\r\n            size: [config.map.cellSize, config.map.cellSize],\r\n            model: {\r\n                name: obj.model,\r\n                offset: [0, 0],\r\n                size: [config.map.cellSize, config.map.cellSize]\r\n            }\r\n        };\r\n        return parsedConfig;\r\n    }\r\n    getParsedCameraConfig(config) {\r\n        const breakpoints = {\r\n            top: getPoint(config.canvas.height, config.camera.top),\r\n            right: getPoint(config.canvas.width, config.camera.right),\r\n            bottom: getPoint(config.canvas.height, config.camera.bottom),\r\n            left: getPoint(config.canvas.width, config.camera.left)\r\n        };\r\n        return breakpoints;\r\n        function getPoint(x, y) {\r\n            const [a, b] = y.split(':');\r\n            return x / parseInt(b) * parseInt(a);\r\n        }\r\n    }\r\n    /************** DEFAULT CONFIG **************/\r\n    applyDefaultConfig(config) {\r\n        const def = this.getDefaultConfig();\r\n        return {\r\n            canvas: Object.assign(Object.assign({}, def.canvas), config.canvas),\r\n            map: Object.assign(Object.assign({}, def.map), config.map),\r\n            camera: Object.assign(Object.assign({}, def.camera), config.camera),\r\n            player: Object.assign({}, config.player),\r\n            objects: [...def.objects, ...config.objects]\r\n        };\r\n    }\r\n    getDefaultConfig() {\r\n        return {\r\n            canvas: {\r\n                width: 900,\r\n                height: 600\r\n            },\r\n            map: {\r\n                width: 20,\r\n                height: 10,\r\n                cellSize: 70,\r\n            },\r\n            camera: {\r\n                top: '1:4',\r\n                right: '1:2',\r\n                bottom: '1:4',\r\n                left: '1:4',\r\n            },\r\n            player: null,\r\n            objects: []\r\n        };\r\n    }\r\n}\r\n","import CanvasService from \"./services/canvas.service\";\r\nimport { ImageService } from \"./services/image.service\";\r\nimport { ObjectService } from \"./services/object.service\";\r\nimport { GameLoopService } from \"./services/game-loop.service\";\r\nimport { ConfigService } from \"./services/config.service\";\r\nexport default class Platformer2D {\r\n    constructor(canvas, config) {\r\n        this.imageService = new ImageService();\r\n        this.configService = new ConfigService(config);\r\n        this.config = this.configService.getParsedConfig();\r\n        this.canvasService = new CanvasService(canvas, this.config, this.imageService);\r\n        this.objectService = new ObjectService(this.imageService, this.canvasService, this.config);\r\n        this.gameLoopService = new GameLoopService(this.canvasService, this.objectService);\r\n        this.imageService.isLoaded.then(() => this.init());\r\n    }\r\n    init() {\r\n        this.gameLoopService.start();\r\n    }\r\n}\r\n;\r\n"],"sourceRoot":""}