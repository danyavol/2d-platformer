{"version":3,"sources":["webpack://Platformer2D/webpack/universalModuleDefinition","webpack://Platformer2D/webpack/bootstrap","webpack://Platformer2D/webpack/runtime/define property getters","webpack://Platformer2D/webpack/runtime/hasOwnProperty shorthand","webpack://Platformer2D/webpack/runtime/make namespace object","webpack://Platformer2D/./src/services/canvas.service.ts","webpack://Platformer2D/./src/services/image.service.ts","webpack://Platformer2D/./src/helpers/common-methods.ts","webpack://Platformer2D/./src/objects/basic-object.ts","webpack://Platformer2D/./src/objects/entity-object.ts","webpack://Platformer2D/./src/objects/player/player.object.ts","webpack://Platformer2D/./src/objects/wall/wall.object.ts","webpack://Platformer2D/./src/services/grid.service.ts","webpack://Platformer2D/./src/services/object.service.ts","webpack://Platformer2D/./src/services/game-loop.service.ts","webpack://Platformer2D/./src/index.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","CanvasService","constructor","canvasElement","config","this","element","canvas","getContext","canvasHeight","canvasWidth","init","width","height","clearCanvas","clearRect","drawImage","img","coords","drawFlippedImage","translate","scale","setTransform","drawFPS","fps","font","fillText","moveCamera","x","y","console","log","ImageService","files","bear","load","grass","filesCount","keys","length","loadedFilesCount","isLoaded","Promise","res","finishLoading","file","Image","onload","fileLoaded","bind","src","abs","num","BasicObject","imageService","canvasService","object","assign","model","modelName","isModelFlipped","relatedCells","modelSize","render","drawObject","modelCoords","EntityObject","super","vx","vy","sideAcceleration","maxSpeed","gravity","maxFallSpeed","jumpPower","inAir","sideButtonPressed","jumpButtonPressed","moveRight","slowDown","speedUp","moveLeft","jump","renderEntity","_stop","_jump","setMaxSpeed","setSideAcceleration","applyGravity","ySpeed","currSpeed","newSpeed","Player","pressedDirection","isLeftPressed","isRightPressed","isJumpPressed","hasCollision","layer","initEventListeners","document","addEventListener","e","updateDirection","Wall","GridService","mapWidth","mapHeight","grid","cellWidth","cellHeight","resetGrid","objects","forEach","addObjectToGrid","removeObjectFromGrid","index","i","entries","index1","array","index2","splice","pop","getRelatedCells","push","size","topLeftCorner","getCellCoords","bottomRightCorner","output","getCellIndex","objCoords","Math","floor","cellCoords","ObjectService","staticObjects","dynamicObjects","gridService","game","clearObjects","type","renderObjects","GameLoopService","objectService","isGamePaused","start","frameStart","performance","now","step","stop","frame","frameEnd","setTimeout","Platformer2D","gameLoopService","then"],"mappings":"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","file":"platformer-2d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Platformer2D\"] = factory();\n\telse\n\t\troot[\"Platformer2D\"] = factory();\n})(self, function() {\nreturn ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// icons https://www.studio-maximus.com/works/apps/birds-to-space/\r\nexport default class CanvasService {\r\n    constructor(canvasElement, config) {\r\n        this.element = canvasElement;\r\n        this.canvas = canvasElement.getContext('2d');\r\n        this.canvasHeight = config.canvasHeight;\r\n        this.canvasWidth = config.canvasWidth;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.element.width = this.canvasWidth;\r\n        this.element.height = this.canvasHeight;\r\n    }\r\n    clearCanvas() {\r\n        this.canvas.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    }\r\n    drawImage(img, coords) {\r\n        this.canvas.drawImage(img, ...coords);\r\n    }\r\n    drawFlippedImage(img, coords) {\r\n        this.canvas.translate(coords[0] + coords[2], coords[1]);\r\n        this.canvas.scale(-1, 1);\r\n        this.canvas.drawImage(img, 0, 0, coords[2], coords[3]);\r\n        this.canvas.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n    drawFPS(fps) {\r\n        this.canvas.font = '14px sans-serif';\r\n        this.canvas.fillText('FPS: ' + fps, 0, 14);\r\n    }\r\n    moveCamera(x, y) {\r\n        console.log(123);\r\n        this.canvas.translate(x, y);\r\n    }\r\n}\r\n","// 1) Import image\r\nimport bear from '../assets/images/bear.svg';\r\nimport grass from '../assets/images/grass.jpg';\r\nexport class ImageService {\r\n    constructor() {\r\n        // 3) Load image to files object\r\n        this.files = {\r\n            bear: this.load(bear),\r\n            grass: this.load(grass),\r\n        };\r\n        this.filesCount = Object.keys(this.files).length;\r\n        this.loadedFilesCount = 0;\r\n        this.isLoaded = new Promise(res => this.finishLoading = res);\r\n    }\r\n    load(file) {\r\n        const img = new Image();\r\n        img.onload = this.fileLoaded.bind(this);\r\n        img.src = file;\r\n        return img;\r\n    }\r\n    fileLoaded() {\r\n        if (++this.loadedFilesCount >= this.filesCount)\r\n            this.finishLoading();\r\n    }\r\n}\r\n","export function swapArrayElements(array, index1, index2) {\r\n    array[index2] = array.splice(index1, 1, array[index2])[0];\r\n}\r\nexport function abs(num) {\r\n    if (num < 0)\r\n        return -num;\r\n    return num;\r\n}\r\n","export class BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        this.canvasService = canvasService;\r\n        this.object = Object.assign(Object.assign({}, config), { model: imageService.files[config.modelName], isModelFlipped: false, relatedCells: [] });\r\n    }\r\n    get coords() {\r\n        return this.object.coords;\r\n    }\r\n    get modelSize() {\r\n        return this.object.modelSize;\r\n    }\r\n    get relatedCells() {\r\n        return this.object.relatedCells;\r\n    }\r\n    set relatedCells(value) {\r\n        this.object.relatedCells = value;\r\n    }\r\n    render() {\r\n        this.drawObject();\r\n    }\r\n    ;\r\n    drawObject() {\r\n        const modelCoords = [\r\n            ...this.object.coords, ...this.object.modelSize\r\n        ];\r\n        if (this.object.isModelFlipped)\r\n            this.canvasService.drawFlippedImage(this.object.model, modelCoords);\r\n        else\r\n            this.canvasService.drawImage(this.object.model, modelCoords);\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { BasicObject } from \"./basic-object\";\r\nconst DEFAULT = {\r\n    sideAcceleration: 0.2,\r\n    maxSpeed: 100,\r\n    gravity: 2000,\r\n    maxFallSpeed: 2000,\r\n    jumpPower: 800\r\n};\r\nexport class EntityObject extends BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.vx = 0; // X-axis speed (in pixels per second)\r\n        this.vy = 0; // Y-axis speed (in pixels per second)\r\n        this.sideAcceleration = DEFAULT.sideAcceleration; // Duration of acceleration animation (in seconds)\r\n        this.maxSpeed = DEFAULT.maxSpeed; // Max speed (in pixels per second)\r\n        this.gravity = DEFAULT.gravity; // Gravity (in pixels per second)\r\n        this.maxFallSpeed = DEFAULT.maxFallSpeed; // Max fall speed (in pixels per second)\r\n        this.jumpPower = DEFAULT.jumpPower; // Jump power (in pixels per second)\r\n        this.inAir = false;\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n    }\r\n    // TODO: Don't let player to go out of bounds\r\n    moveRight() {\r\n        this.sideButtonPressed = true;\r\n        this.object.isModelFlipped = true;\r\n        if (this.vx < 0)\r\n            this.vx = -this.slowDown(this.vx);\r\n        else\r\n            this.vx = this.speedUp(this.vx);\r\n        this.object.coords[0] = this.object.coords[0] + this.vx / this.fps;\r\n    }\r\n    moveLeft() {\r\n        this.sideButtonPressed = true;\r\n        this.object.isModelFlipped = false;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.speedUp(this.vx);\r\n        this.object.coords[0] = this.object.coords[0] + this.vx / this.fps;\r\n    }\r\n    jump() {\r\n        if (!this.inAir) {\r\n            this.jumpButtonPressed = true;\r\n            this.inAir = true;\r\n            this.vy = this.jumpPower;\r\n            this.object.coords[1] = this.object.coords[1] - this.vy / this.fps;\r\n        }\r\n    }\r\n    renderEntity(fps) {\r\n        this.fps = fps;\r\n        if (!this.sideButtonPressed)\r\n            this._stop();\r\n        if (!this.jumpButtonPressed)\r\n            this._jump();\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n        super.render();\r\n    }\r\n    ;\r\n    setMaxSpeed(maxSpeed) {\r\n        this.maxSpeed = maxSpeed;\r\n    }\r\n    setSideAcceleration(sideAcceleration) {\r\n        this.sideAcceleration = sideAcceleration;\r\n    }\r\n    /****************** Execute this if no buttons pressed *********************/\r\n    _stop() {\r\n        if (this.vx === 0)\r\n            return;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.slowDown(this.vx);\r\n        this.object.coords[0] = this.object.coords[0] + this.vx / this.fps;\r\n    }\r\n    _jump() {\r\n        if (!this.inAir)\r\n            return;\r\n        this.vy = this.applyGravity(this.vy);\r\n        this.object.coords[1] = this.object.coords[1] - this.vy / this.fps;\r\n    }\r\n    /****************** Helpers *********************/\r\n    applyGravity(vy) {\r\n        const ySpeed = vy - this.gravity / this.fps;\r\n        if (-ySpeed > this.maxFallSpeed)\r\n            return -this.maxFallSpeed;\r\n        else\r\n            return ySpeed;\r\n    }\r\n    speedUp(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed + this.maxSpeed / (this.fps * this.sideAcceleration);\r\n        if (newSpeed > this.maxSpeed)\r\n            return this.maxSpeed;\r\n        else\r\n            return newSpeed;\r\n    }\r\n    slowDown(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed - this.maxSpeed / (this.fps * this.sideAcceleration);\r\n        if (newSpeed < 0)\r\n            return 0;\r\n        else\r\n            return newSpeed;\r\n    }\r\n}\r\n","import { EntityObject } from \"../entity-object\";\r\nexport class Player extends EntityObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.pressedDirection = null;\r\n        this.isLeftPressed = false;\r\n        this.isRightPressed = false;\r\n        this.isJumpPressed = false;\r\n        this.object.hasCollision = true;\r\n        this.object.layer = 2;\r\n        this.setMaxSpeed(350);\r\n        this.initEventListeners();\r\n    }\r\n    renderEntity(fps) {\r\n        switch (this.pressedDirection) {\r\n            case 'left':\r\n                super.moveLeft();\r\n                break;\r\n            case 'right':\r\n                super.moveRight();\r\n                break;\r\n        }\r\n        if (this.isJumpPressed)\r\n            super.jump();\r\n        super.renderEntity(fps);\r\n    }\r\n    initEventListeners() {\r\n        document.addEventListener('keydown', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = true;\r\n                    break;\r\n            }\r\n        });\r\n        document.addEventListener('keyup', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = false;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    updateDirection() {\r\n        if (this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = 'left';\r\n        }\r\n        else if (!this.isLeftPressed && this.isRightPressed) {\r\n            this.pressedDirection = 'right';\r\n        }\r\n        else if (!this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = null;\r\n        }\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Wall extends BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.object.hasCollision = true;\r\n        this.object.layer = 1;\r\n    }\r\n    render() {\r\n        super.render();\r\n    }\r\n}\r\n","import { swapArrayElements } from \"../helpers/common-methods\";\r\nconst DEFAULT = {\r\n    cellWidth: 150,\r\n    cellHeight: 150\r\n};\r\nexport class GridService {\r\n    constructor(mapWidth, mapHeight) {\r\n        this.mapWidth = mapWidth;\r\n        this.mapHeight = mapHeight;\r\n        this.grid = {};\r\n        this.cellWidth = DEFAULT.cellWidth;\r\n        this.cellHeight = DEFAULT.cellHeight;\r\n        this.resetGrid();\r\n    }\r\n    init(objects) {\r\n        objects.forEach(obj => this.addObjectToGrid(obj));\r\n        console.log(this.grid);\r\n    }\r\n    // TODO: Check if it faster not remove/add all items, but update only changed items\r\n    removeObjectFromGrid(object) {\r\n        object.relatedCells.forEach(index => {\r\n            for (let [i, obj] of this.grid[index].entries()) {\r\n                if (obj === object) {\r\n                    // Swap our object with the last item in array and then remove last item (performance hack)\r\n                    swapArrayElements(this.grid[index], i, this.grid[index].length - 1);\r\n                    this.grid[index].pop();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    addObjectToGrid(object) {\r\n        const relatedCells = this.getRelatedCells(object.coords, object.modelSize);\r\n        relatedCells.forEach(index => this.grid[index].push(object));\r\n        object.relatedCells = relatedCells;\r\n    }\r\n    resetGrid() {\r\n        const cells = this.getRelatedCells([0, 0], [this.mapWidth, this.mapHeight]);\r\n        cells.forEach(index => this.grid[index] = []);\r\n    }\r\n    getRelatedCells(coords, size) {\r\n        const topLeftCorner = this.getCellCoords(coords);\r\n        const bottomRightCorner = this.getCellCoords([coords[0] + size[0], coords[1] + size[1]]);\r\n        const output = [];\r\n        for (let x = topLeftCorner[0]; x <= bottomRightCorner[0]; x++) {\r\n            for (let y = topLeftCorner[1]; y <= bottomRightCorner[1]; y++) {\r\n                output.push(this.getCellIndex([x, y]));\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    getCellCoords(objCoords) {\r\n        const x = Math.floor(objCoords[0] / this.cellWidth);\r\n        const y = Math.floor(objCoords[1] / this.cellHeight);\r\n        return [x, y];\r\n    }\r\n    getCellIndex(cellCoords) {\r\n        return cellCoords[0] + 'x' + cellCoords[1];\r\n    }\r\n}\r\n","import { Player } from \"../objects/player/player.object\";\r\nimport { Wall } from \"../objects/wall/wall.object\";\r\nimport { GridService } from \"./grid.service\";\r\nexport class ObjectService {\r\n    constructor(imageService, canvasService, config) {\r\n        this.imageService = imageService;\r\n        this.canvasService = canvasService;\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n        this.gridService = new GridService(config.game.mapWidth, config.game.mapHeight);\r\n    }\r\n    init(objects) {\r\n        this.clearObjects();\r\n        for (let obj of objects) {\r\n            switch (obj.type) {\r\n                case 'wall':\r\n                    this.staticObjects.push(new Wall(obj, this.imageService, this.canvasService));\r\n                    break;\r\n                case 'player':\r\n                    this.dynamicObjects.push(new Player(obj, this.imageService, this.canvasService));\r\n                    break;\r\n            }\r\n        }\r\n        // this.gridService.init([...this.staticObjects, ...this.dynamicObjects]);\r\n    }\r\n    renderObjects(fps) {\r\n        [...this.staticObjects, ...this.dynamicObjects]\r\n            .forEach(o => this.gridService.removeObjectFromGrid(o));\r\n        this.staticObjects.forEach(o => o.render());\r\n        this.dynamicObjects.forEach(o => o.renderEntity(fps));\r\n        [...this.staticObjects, ...this.dynamicObjects]\r\n            .forEach(o => this.gridService.addObjectToGrid(o));\r\n    }\r\n    clearObjects() {\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n    }\r\n}\r\n","export class GameLoopService {\r\n    constructor(canvasService, objectService) {\r\n        this.canvasService = canvasService;\r\n        this.objectService = objectService;\r\n        this.isGamePaused = false;\r\n    }\r\n    start() {\r\n        this.isGamePaused = false;\r\n        this.frameStart = performance.now();\r\n        this.step();\r\n    }\r\n    stop() {\r\n        this.isGamePaused = true;\r\n    }\r\n    // Methods that should be executed during single game frame\r\n    frame() {\r\n        this.canvasService.clearCanvas();\r\n        this.objectService.renderObjects(this.fps);\r\n        this.canvasService.drawFPS(this.fps);\r\n    }\r\n    step() {\r\n        const frameEnd = performance.now();\r\n        this.fps = Math.floor(1000 / (frameEnd - this.frameStart));\r\n        this.frameStart = performance.now();\r\n        this.frame();\r\n        if (!this.isGamePaused)\r\n            setTimeout(() => this.step(), 0);\r\n    }\r\n}\r\n","import CanvasService from \"./services/canvas.service\";\r\nimport { ImageService } from \"./services/image.service\";\r\nimport { ObjectService } from \"./services/object.service\";\r\nimport { GameLoopService } from \"./services/game-loop.service\";\r\nexport default class Platformer2D {\r\n    constructor(canvas, config) {\r\n        this.config = config;\r\n        this.imageService = new ImageService();\r\n        this.canvasService = new CanvasService(canvas, config);\r\n        this.objectService = new ObjectService(this.imageService, this.canvasService, config);\r\n        this.gameLoopService = new GameLoopService(this.canvasService, this.objectService);\r\n        this.imageService.isLoaded.then(() => this.init());\r\n    }\r\n    init() {\r\n        this.objectService.init(this.config.objects);\r\n        this.gameLoopService.start();\r\n    }\r\n}\r\n;\r\n"],"sourceRoot":""}