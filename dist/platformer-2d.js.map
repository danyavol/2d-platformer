{"version":3,"sources":["webpack://Platformer2D/webpack/universalModuleDefinition","webpack://Platformer2D/webpack/bootstrap","webpack://Platformer2D/webpack/runtime/define property getters","webpack://Platformer2D/webpack/runtime/hasOwnProperty shorthand","webpack://Platformer2D/webpack/runtime/make namespace object","webpack://Platformer2D/./src/services/canvas.service.ts","webpack://Platformer2D/./src/services/image.service.ts","webpack://Platformer2D/./src/helpers/common-methods.ts","webpack://Platformer2D/./src/objects/basic-object.ts","webpack://Platformer2D/./src/objects/entity-object.ts","webpack://Platformer2D/./src/objects/player/player.object.ts","webpack://Platformer2D/./src/objects/wall/wall.object.ts","webpack://Platformer2D/./src/services/grid.service.ts","webpack://Platformer2D/./src/services/object.service.ts","webpack://Platformer2D/./src/services/game-loop.service.ts","webpack://Platformer2D/./src/index.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","CanvasService","constructor","canvasElement","config","this","translation","h","v","element","canvas","getContext","canvasWidth","width","canvasHeight","height","mapWidth","game","map","mapHeight","updateCameraBreakpoint","camera","updateCameraTranslation","x","y","w","transX","transY","breakpoints","left","right","translate","top","bottom","clearCanvas","clearRect","drawImage","img","coords","drawFlippedImage","scale","setTransform","drawFPS","fps","font","fillText","getPoint","a","b","split","parseInt","ImageService","files","bear","load","grass","filesCount","keys","length","loadedFilesCount","isLoaded","Promise","res","finishLoading","file","Image","onload","fileLoaded","bind","src","abs","num","BasicObject","imageService","canvasService","isModelFlipped","relatedCells","size","model","name","modelName","image","offset","modelOffset","modelSize","drawObject","modelCoords","DEFAULT_CONFIG","maxSpeed","sideAcceleration","gravity","maxFallSpeed","jumpPower","EntityObject","super","vx","vy","entityConfig","sideButtonPressed","jumpButtonPressed","inAir","moveRight","slowDown","speedUp","moveLeft","jump","updateState","_stop","_fall","setEntityConfig","assign","stopFalling","startFalling","applyGravity","resetSideAcceleration","ySpeed","currSpeed","newSpeed","Player","pressedDirection","isLeftPressed","isRightPressed","isJumpPressed","hasCollision","initEventListeners","document","addEventListener","e","updateDirection","Wall","GridService","grid","cellWidth","cellHeight","resetGrid","getNeighbors","object","output","Set","forEach","index","add","Array","from","updateObjectPosition","removeObjectFromGrid","addObjectToGrid","i","entries","index1","array","index2","splice","pop","getRelatedCells","push","topLeftCorner","getCellCoords","bottomRightCorner","getCellIndex","objCoords","Math","floor","cellCoords","ObjectService","staticObjects","dynamicObjects","mapConfig","objectsConfig","objects","gridService","init","clearObjects","type","player","renderObjects","renderDynamicObject","checkBounds","checkAllCollisions","objectsAround","hasOverlaps","checkCollision","o1","o2","o1_x1","o1_y1","o1_x2","o1_y2","o2_x1","o2_y1","o2_x2","o2_y2","horizontalOverlap","h1","h2","verticalOverlap","v1","v2","hOffset","vOffset","GameLoopService","objectService","isGamePaused","start","frameStart","performance","now","step","stop","frame","frameEnd","setTimeout","Platformer2D","gameLoopService","then"],"mappings":"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","file":"platformer-2d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Platformer2D\"] = factory();\n\telse\n\t\troot[\"Platformer2D\"] = factory();\n})(self, function() {\nreturn ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// icons https://www.studio-maximus.com/works/apps/birds-to-space/\r\nexport default class CanvasService {\r\n    constructor(canvasElement, config) {\r\n        this.translation = {\r\n            h: 0,\r\n            v: 0\r\n        };\r\n        this.element = canvasElement;\r\n        this.canvas = canvasElement.getContext('2d');\r\n        this.canvasWidth = config.canvas.width;\r\n        this.canvasHeight = config.canvas.height;\r\n        this.mapWidth = config.game.map.width;\r\n        this.mapHeight = config.game.map.height;\r\n        this.element.width = this.canvasWidth;\r\n        this.element.height = this.canvasHeight;\r\n        this.updateCameraBreakpoint(config.game.camera);\r\n    }\r\n    updateCameraTranslation(x, y, w, h) {\r\n        // Horizontal translation\r\n        let transX;\r\n        if (this.translation.h + this.breakpoints.left > x) {\r\n            transX = this.translation.h - (this.breakpoints.left + this.translation.h - x);\r\n        }\r\n        else if (this.translation.h + this.canvasWidth - this.breakpoints.right < x + w) {\r\n            transX = this.translation.h + (x + w - (this.translation.h + this.canvasWidth - this.breakpoints.right));\r\n        }\r\n        if (transX != null && transX != this.translation.h && transX > 0 && transX < this.mapWidth - this.canvasWidth) {\r\n            this.canvas.translate(this.translation.h - transX, 0);\r\n            this.translation.h = transX;\r\n        }\r\n        // Vertical translation\r\n        let transY;\r\n        if (this.translation.v + this.breakpoints.top > y) {\r\n            transY = this.translation.v - (this.breakpoints.top + this.translation.v - y);\r\n        }\r\n        else if (this.translation.v + this.canvasHeight - this.breakpoints.bottom < y + h) {\r\n            transY = this.translation.v + (y + h - (this.translation.v + this.canvasHeight - this.breakpoints.bottom));\r\n        }\r\n        if (transY != null && transY != this.translation.v && transY > 0 && transY < this.mapHeight - this.canvasHeight) {\r\n            this.canvas.translate(0, this.translation.v - transY);\r\n            this.translation.v = transY;\r\n        }\r\n    }\r\n    clearCanvas() {\r\n        this.canvas.clearRect(0 + this.translation.h, 0 + this.translation.v, this.canvasWidth, this.canvasHeight);\r\n    }\r\n    drawImage(img, coords) {\r\n        this.canvas.drawImage(img, ...coords);\r\n    }\r\n    drawFlippedImage(img, coords) {\r\n        this.canvas.translate(coords[0] + coords[2], coords[1]);\r\n        this.canvas.scale(-1, 1);\r\n        this.canvas.drawImage(img, 0, 0, coords[2], coords[3]);\r\n        this.canvas.setTransform(1, 0, 0, 1, -this.translation.h, -this.translation.v);\r\n    }\r\n    drawFPS(fps) {\r\n        this.canvas.font = '14px sans-serif';\r\n        this.canvas.fillText('FPS: ' + fps, 0 + this.translation.h, 14 + this.translation.v);\r\n    }\r\n    updateCameraBreakpoint(config) {\r\n        this.breakpoints = {\r\n            top: getPoint(this.canvasHeight, config.top),\r\n            right: getPoint(this.canvasWidth, config.right),\r\n            bottom: getPoint(this.canvasHeight, config.bottom),\r\n            left: getPoint(this.canvasWidth, config.left)\r\n        };\r\n        function getPoint(x, y) {\r\n            const [a, b] = y.split(':');\r\n            return x / parseInt(b) * parseInt(a);\r\n        }\r\n    }\r\n}\r\n","// 1) Import image\r\nimport bear from '../assets/images/bear.svg';\r\nimport grass from '../assets/images/grass.jpg';\r\nexport class ImageService {\r\n    constructor() {\r\n        // 3) Load image to files object\r\n        this.files = {\r\n            bear: this.load(bear),\r\n            grass: this.load(grass),\r\n        };\r\n        this.filesCount = Object.keys(this.files).length;\r\n        this.loadedFilesCount = 0;\r\n        this.isLoaded = new Promise(res => this.finishLoading = res);\r\n    }\r\n    load(file) {\r\n        const img = new Image();\r\n        img.onload = this.fileLoaded.bind(this);\r\n        img.src = file;\r\n        return img;\r\n    }\r\n    fileLoaded() {\r\n        if (++this.loadedFilesCount >= this.filesCount)\r\n            this.finishLoading();\r\n    }\r\n}\r\n","export function swapArrayElements(array, index1, index2) {\r\n    array[index2] = array.splice(index1, 1, array[index2])[0];\r\n}\r\nexport function abs(num) {\r\n    if (num < 0)\r\n        return -num;\r\n    return num;\r\n}\r\n","export class BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        this.canvasService = canvasService;\r\n        this.isModelFlipped = false;\r\n        this.relatedCells = [];\r\n        this.coords = config.coords;\r\n        this.size = config.size;\r\n        this.model = {\r\n            name: config.modelName,\r\n            image: imageService.files[config.modelName],\r\n            offset: config.modelOffset,\r\n            size: config.modelSize\r\n        };\r\n    }\r\n    drawObject() {\r\n        const modelCoords = [\r\n            this.coords[0] + this.model.offset[0],\r\n            this.coords[1] + this.model.offset[1],\r\n            ...this.model.size\r\n        ];\r\n        if (this.isModelFlipped)\r\n            this.canvasService.drawFlippedImage(this.model.image, modelCoords);\r\n        else\r\n            this.canvasService.drawImage(this.model.image, modelCoords);\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { BasicObject } from \"./basic-object\";\r\nconst DEFAULT_CONFIG = {\r\n    maxSpeed: 100,\r\n    sideAcceleration: 0.2,\r\n    gravity: 2000,\r\n    maxFallSpeed: 2000,\r\n    jumpPower: 800\r\n};\r\nexport class EntityObject extends BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.vx = 0; // X-axis speed (in pixels per second)\r\n        this.vy = 0; // Y-axis speed (in pixels per second)\r\n        this.entityConfig = DEFAULT_CONFIG;\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n        this.inAir = false;\r\n    }\r\n    // TODO: Don't let player to go out of bounds\r\n    moveRight() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = true;\r\n        if (this.vx < 0)\r\n            this.vx = -this.slowDown(this.vx);\r\n        else\r\n            this.vx = this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    moveLeft() {\r\n        this.sideButtonPressed = true;\r\n        this.isModelFlipped = false;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.speedUp(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    jump() {\r\n        if (!this.inAir) {\r\n            this.jumpButtonPressed = true;\r\n            this.inAir = true;\r\n            this.vy = this.entityConfig.jumpPower;\r\n            this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n        }\r\n    }\r\n    updateState(fps) {\r\n        this.fps = fps;\r\n        if (!this.sideButtonPressed)\r\n            this._stop();\r\n        if (!this.jumpButtonPressed)\r\n            this._fall();\r\n        this.sideButtonPressed = false;\r\n        this.jumpButtonPressed = false;\r\n    }\r\n    ;\r\n    setEntityConfig(entityConfig) {\r\n        this.entityConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), entityConfig);\r\n    }\r\n    stopFalling() {\r\n        this.inAir = false;\r\n        this.vy = 0;\r\n    }\r\n    startFalling() {\r\n        this.vy = this.applyGravity(0);\r\n    }\r\n    resetSideAcceleration() {\r\n        this.vx = 0;\r\n    }\r\n    /****************** Execute this if no buttons pressed *********************/\r\n    _stop() {\r\n        if (this.vx === 0)\r\n            return;\r\n        if (this.vx > 0)\r\n            this.vx = this.slowDown(this.vx);\r\n        else\r\n            this.vx = -this.slowDown(this.vx);\r\n        this.coords[0] = this.coords[0] + this.vx / this.fps;\r\n    }\r\n    _fall() {\r\n        // if (!this.inAir) return;\r\n        this.inAir = true;\r\n        this.vy = this.applyGravity(this.vy);\r\n        this.coords[1] = this.coords[1] - this.vy / this.fps;\r\n    }\r\n    /****************** Helpers *********************/\r\n    applyGravity(vy) {\r\n        const ySpeed = vy - this.entityConfig.gravity / this.fps;\r\n        if (-ySpeed > this.entityConfig.maxFallSpeed)\r\n            return -this.entityConfig.maxFallSpeed;\r\n        else\r\n            return ySpeed;\r\n    }\r\n    speedUp(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed + this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed > this.entityConfig.maxSpeed)\r\n            return this.entityConfig.maxSpeed;\r\n        else\r\n            return newSpeed;\r\n    }\r\n    slowDown(currSpeed) {\r\n        const speed = abs(currSpeed);\r\n        const newSpeed = speed - this.entityConfig.maxSpeed / (this.fps * this.entityConfig.sideAcceleration);\r\n        if (newSpeed < 0)\r\n            return 0;\r\n        else\r\n            return newSpeed;\r\n    }\r\n}\r\n","import { EntityObject } from \"../entity-object\";\r\nexport class Player extends EntityObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.pressedDirection = null;\r\n        this.isLeftPressed = false;\r\n        this.isRightPressed = false;\r\n        this.isJumpPressed = false;\r\n        this.hasCollision = true;\r\n        this.setEntityConfig({\r\n            maxSpeed: 350\r\n        });\r\n        this.initEventListeners();\r\n    }\r\n    updateState(fps) {\r\n        switch (this.pressedDirection) {\r\n            case 'left':\r\n                super.moveLeft();\r\n                break;\r\n            case 'right':\r\n                super.moveRight();\r\n                break;\r\n        }\r\n        if (this.isJumpPressed)\r\n            super.jump();\r\n        super.updateState(fps);\r\n    }\r\n    initEventListeners() {\r\n        document.addEventListener('keydown', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = true;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = true;\r\n                    break;\r\n            }\r\n        });\r\n        document.addEventListener('keyup', e => {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.isRightPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.isLeftPressed = false;\r\n                    this.updateDirection();\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.isJumpPressed = false;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    updateDirection() {\r\n        if (this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = 'left';\r\n        }\r\n        else if (!this.isLeftPressed && this.isRightPressed) {\r\n            this.pressedDirection = 'right';\r\n        }\r\n        else if (!this.isLeftPressed && !this.isRightPressed) {\r\n            this.pressedDirection = null;\r\n        }\r\n    }\r\n}\r\n","import { BasicObject } from \"../basic-object\";\r\nexport class Wall extends BasicObject {\r\n    constructor(config, imageService, canvasService) {\r\n        super(config, imageService, canvasService);\r\n        this.hasCollision = true;\r\n    }\r\n}\r\n","import { swapArrayElements } from \"../helpers/common-methods\";\r\nconst DEFAULT = {\r\n    cellWidth: 150,\r\n    cellHeight: 150\r\n};\r\nexport class GridService {\r\n    constructor(mapWidth, mapHeight) {\r\n        this.mapWidth = mapWidth;\r\n        this.mapHeight = mapHeight;\r\n        this.grid = {};\r\n        this.cellWidth = DEFAULT.cellWidth;\r\n        this.cellHeight = DEFAULT.cellHeight;\r\n        this.resetGrid();\r\n    }\r\n    getNeighbors(object) {\r\n        const output = new Set();\r\n        object.relatedCells.forEach(index => {\r\n            this.grid[index].forEach(o => {\r\n                if (o !== object)\r\n                    output.add(o);\r\n            });\r\n        });\r\n        return Array.from(output);\r\n    }\r\n    updateObjectPosition(o) {\r\n        this.removeObjectFromGrid(o);\r\n        this.addObjectToGrid(o);\r\n    }\r\n    // TODO: Check if it faster not remove/add all items, but update only changed items\r\n    removeObjectFromGrid(object) {\r\n        object.relatedCells.forEach(index => {\r\n            for (let [i, obj] of this.grid[index].entries()) {\r\n                if (obj === object) {\r\n                    // Swap our object with the last item in array and then remove last item (performance hack)\r\n                    swapArrayElements(this.grid[index], i, this.grid[index].length - 1);\r\n                    this.grid[index].pop();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        object.relatedCells = [];\r\n    }\r\n    addObjectToGrid(object) {\r\n        const relatedCells = this.getRelatedCells(object.coords, object.size);\r\n        relatedCells.forEach(index => this.grid[index].push(object));\r\n        object.relatedCells = relatedCells;\r\n    }\r\n    resetGrid() {\r\n        const cells = this.getRelatedCells([0, 0], [this.mapWidth, this.mapHeight]);\r\n        cells.forEach(index => this.grid[index] = []);\r\n    }\r\n    getRelatedCells(coords, size) {\r\n        const topLeftCorner = this.getCellCoords(coords);\r\n        const bottomRightCorner = this.getCellCoords([coords[0] + size[0], coords[1] + size[1]]);\r\n        const output = [];\r\n        for (let x = topLeftCorner[0]; x <= bottomRightCorner[0]; x++) {\r\n            for (let y = topLeftCorner[1]; y <= bottomRightCorner[1]; y++) {\r\n                output.push(this.getCellIndex([x, y]));\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    getCellCoords(objCoords) {\r\n        const x = Math.floor(objCoords[0] / this.cellWidth);\r\n        const y = Math.floor(objCoords[1] / this.cellHeight);\r\n        return [x, y];\r\n    }\r\n    getCellIndex(cellCoords) {\r\n        return cellCoords[0] + 'x' + cellCoords[1];\r\n    }\r\n}\r\n","import { abs } from \"../helpers/common-methods\";\r\nimport { Player } from \"../objects/player/player.object\";\r\nimport { Wall } from \"../objects/wall/wall.object\";\r\nimport { GridService } from \"./grid.service\";\r\nexport class ObjectService {\r\n    constructor(imageService, canvasService, config) {\r\n        this.imageService = imageService;\r\n        this.canvasService = canvasService;\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n        this.mapConfig = config.game.map;\r\n        this.objectsConfig = config.game.objects;\r\n        this.gridService = new GridService(this.mapConfig.width, this.mapConfig.height);\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.clearObjects();\r\n        for (let obj of this.objectsConfig) {\r\n            switch (obj.type) {\r\n                case 'wall':\r\n                    this.staticObjects.push(new Wall(obj, this.imageService, this.canvasService));\r\n                    break;\r\n                case 'player':\r\n                    this.player = new Player(obj, this.imageService, this.canvasService);\r\n                    break;\r\n            }\r\n        }\r\n        this.staticObjects.forEach(o => this.gridService.addObjectToGrid(o));\r\n    }\r\n    renderObjects(fps) {\r\n        /* Static objects render */\r\n        this.staticObjects.forEach(o => o.drawObject());\r\n        /* Player render */\r\n        this.renderDynamicObject(this.player, fps);\r\n        this.canvasService.updateCameraTranslation(...this.player.coords, ...this.player.size);\r\n        /* Dynamic objects render */\r\n        this.dynamicObjects.forEach(o => {\r\n            this.renderDynamicObject(o, fps);\r\n        });\r\n    }\r\n    renderDynamicObject(object, fps) {\r\n        object.updateState(fps);\r\n        this.checkBounds(object);\r\n        this.gridService.updateObjectPosition(object);\r\n        this.checkAllCollisions(object, this.gridService.getNeighbors(object));\r\n        object.drawObject();\r\n    }\r\n    clearObjects() {\r\n        this.staticObjects = [];\r\n        this.dynamicObjects = [];\r\n    }\r\n    get allObjects() {\r\n        return [...this.staticObjects, ...this.dynamicObjects];\r\n    }\r\n    checkBounds(obj) {\r\n        let [x, y] = obj.coords;\r\n        if (x < 0) {\r\n            x = 0;\r\n            obj.resetSideAcceleration();\r\n        }\r\n        else if (x + obj.size[0] > this.mapConfig.width) {\r\n            x = this.mapConfig.width - obj.size[0];\r\n            obj.resetSideAcceleration();\r\n        }\r\n        if (y < 0) {\r\n            y = 0;\r\n            obj.startFalling();\r\n        }\r\n        else if (y + obj.size[1] > this.mapConfig.height) {\r\n            y = this.mapConfig.height - obj.size[1];\r\n            obj.stopFalling();\r\n        }\r\n        obj.coords = [x, y];\r\n    }\r\n    checkAllCollisions(obj, objectsAround) {\r\n        let hasOverlaps = false;\r\n        objectsAround.forEach(o => this.checkCollision(obj, o) ? hasOverlaps = true : null);\r\n        if (hasOverlaps)\r\n            this.gridService.updateObjectPosition(obj);\r\n    }\r\n    checkCollision(o1, o2) {\r\n        // if o1 overlaps with o2, then o1 will be moved out from o2\r\n        // P.S. This function is hell for debugging :)\r\n        let [o1_x1, o1_y1] = o1.coords;\r\n        const [o1_x2, o1_y2] = [o1.coords[0] + o1.size[0], o1.coords[1] + o1.size[1]];\r\n        const [o2_x1, o2_y1] = o2.coords;\r\n        const [o2_x2, o2_y2] = [o2.coords[0] + o2.size[0], o2.coords[1] + o2.size[1]];\r\n        // Check horizontal overlaps\r\n        let horizontalOverlap = false;\r\n        const h1 = o1_x2 - o2_x1;\r\n        const h2 = o1_x1 - o2_x2;\r\n        if ((h1 < 0 && h2 > 0) || (h1 > 0 && h2 < 0))\r\n            horizontalOverlap = true;\r\n        // Check vertical overlaps\r\n        let verticalOverlap = false;\r\n        const v1 = o1_y2 - o2_y1;\r\n        const v2 = o1_y1 - o2_y2;\r\n        if ((v1 < 0 && v2 > 0) || (v1 > 0 && v2 < 0))\r\n            verticalOverlap = true;\r\n        // If overlaps in all axes\r\n        if (verticalOverlap && horizontalOverlap) {\r\n            const hOffset = abs(h1) < abs(h2) ? h1 : h2;\r\n            const vOffset = abs(v1) < abs(v2) ? v1 : v2;\r\n            if (abs(hOffset) < abs(vOffset)) {\r\n                o1_x1 -= hOffset;\r\n                o1.resetSideAcceleration();\r\n            }\r\n            else {\r\n                o1_y1 -= vOffset;\r\n                if (vOffset > 0) {\r\n                    o1.stopFalling();\r\n                }\r\n                else {\r\n                    o1.startFalling();\r\n                }\r\n            }\r\n            o1.coords = [o1_x1, o1_y1];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class GameLoopService {\r\n    constructor(canvasService, objectService) {\r\n        this.canvasService = canvasService;\r\n        this.objectService = objectService;\r\n        this.isGamePaused = false;\r\n    }\r\n    start() {\r\n        this.isGamePaused = false;\r\n        this.frameStart = performance.now();\r\n        this.step();\r\n    }\r\n    stop() {\r\n        this.isGamePaused = true;\r\n    }\r\n    // Methods that should be executed during single game frame\r\n    frame() {\r\n        this.canvasService.clearCanvas();\r\n        this.objectService.renderObjects(this.fps);\r\n        this.canvasService.drawFPS(this.fps);\r\n    }\r\n    step() {\r\n        const frameEnd = performance.now();\r\n        this.fps = Math.floor(1000 / (frameEnd - this.frameStart));\r\n        this.frameStart = performance.now();\r\n        this.frame();\r\n        if (!this.isGamePaused)\r\n            setTimeout(() => this.step(), 0);\r\n    }\r\n}\r\n","import CanvasService from \"./services/canvas.service\";\r\nimport { ImageService } from \"./services/image.service\";\r\nimport { ObjectService } from \"./services/object.service\";\r\nimport { GameLoopService } from \"./services/game-loop.service\";\r\nexport default class Platformer2D {\r\n    constructor(canvas, config) {\r\n        this.config = config;\r\n        this.imageService = new ImageService();\r\n        this.canvasService = new CanvasService(canvas, config);\r\n        this.objectService = new ObjectService(this.imageService, this.canvasService, config);\r\n        this.gameLoopService = new GameLoopService(this.canvasService, this.objectService);\r\n        this.imageService.isLoaded.then(() => this.init());\r\n    }\r\n    init() {\r\n        this.gameLoopService.start();\r\n    }\r\n}\r\n;\r\n"],"sourceRoot":""}